{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/WorkerAuth.service.ts","webpack:///./src/admin-guard.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.scss","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.scss","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/order-pending/order-pending.component.html","webpack:///./src/app/order-pending/order-pending.component.scss","webpack:///./src/app/order-pending/order-pending.component.ts","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.scss","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/profile/upload-profile.html","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.scss","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services-list/services-list.component.html","webpack:///./src/app/services-list/services-list.component.scss","webpack:///./src/app/services-list/services-list.component.ts","webpack:///./src/app/services-modify/services-modify.component.html","webpack:///./src/app/services-modify/services-modify.component.scss","webpack:///./src/app/services-modify/services-modify.component.ts","webpack:///./src/app/services/services.component.html","webpack:///./src/app/services/services.component.scss","webpack:///./src/app/services/services.component.ts","webpack:///./src/app/services/upload-service.html","webpack:///./src/app/worker-login/worker-login.component.html","webpack:///./src/app/worker-login/worker-login.component.scss","webpack:///./src/app/worker-login/worker-login.component.ts","webpack:///./src/app/worker-profile/order-info.html","webpack:///./src/app/worker-profile/upload-worker-profile.html","webpack:///./src/app/worker-profile/worker-profile.component.html","webpack:///./src/app/worker-profile/worker-profile.component.scss","webpack:///./src/app/worker-profile/worker-profile.component.ts","webpack:///./src/app/worker-register/worker-register.component.html","webpack:///./src/app/worker-register/worker-register.component.scss","webpack:///./src/app/worker-register/worker-register.component.ts","webpack:///./src/auth-guard.service.ts","webpack:///./src/authentification.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/order.service.ts","webpack:///./src/services.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport {Token} from '@angular/compiler';\r\n\r\nexport interface WorkerDetails {\r\n  id: number\r\n  firstname: string\r\n  lastname: string\r\n  email: string\r\n  password: string\r\n  phone: string\r\n  image: string\r\n  exp: number\r\n  iat: number\r\n}\r\n\r\ninterface TokenResponse2{\r\n  token: string\r\n}\r\n\r\nexport interface TokenPayload2{\r\n  id: number\r\n  firstname: string\r\n  lastname: string\r\n  email: string\r\n  password: string\r\n  phone: string\r\n  image: string\r\n}\r\n\r\n@Injectable()\r\nexport class WorkerAuthService {\r\n  private token: string\r\n\r\n  constructor(private http: HttpClient, private router: Router){}\r\n\r\n  private saveToken(token: string): void {\r\n    localStorage.setItem('workerToken',token)\r\n    this.token = token\r\n  }\r\n\r\n  private getToken(): string {\r\n    if(!this.token){\r\n      this.token = localStorage.getItem('workerToken')\r\n    }\r\n    return this.token\r\n  }\r\n\r\n  public getWorkerDetails(): WorkerDetails {\r\n    const token = this.getToken()\r\n    let payload\r\n    if(token){\r\n      payload = token.split('.')[1]\r\n      console.log(payload)\r\n      payload = window.atob(payload)\r\n      console.log(payload)\r\n      return JSON.parse(payload)\r\n    }else{\r\n      return null\r\n    }\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = this.getWorkerDetails()\r\n    if(user) {\r\n      return user.exp > Date.now() / 1000\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n\r\n  public register(user: TokenPayload2) : Observable<any> {\r\n    const base = this.http.post('/api/WorkerRegister',user)\r\n\r\n    const request = base.pipe(\r\n      map((data: TokenResponse2) => {\r\n        if(data.token) {\r\n          this.saveToken(data.token)\r\n        }\r\n        return data\r\n      })\r\n    )\r\n    return request\r\n  }\r\n\r\n  public login(user: TokenPayload2) : Observable<any> {\r\n    const base = this.http.post('/api/WorkerLogin',user)\r\n\r\n    const request = base.pipe(\r\n      map((data: TokenResponse2) => {\r\n        if(data.token) {\r\n          this.saveToken(data.token)\r\n        }\r\n        return data\r\n      })\r\n    )\r\n    return request\r\n  }\r\n\r\n  public profile(): Observable<any> {\r\n    return this.http.get('/api/WorkerProfile', {\r\n      headers: { Authorization: `${this.getToken()}` }\r\n    })\r\n  }\r\n\r\n  public logout(): void {\r\n    this.token = ''\r\n    window.localStorage.removeItem('workerToken')\r\n    this.router.navigateByUrl('/worker-login')\r\n  }\r\n\r\n  public workerById(id): Observable<any> {\r\n    return this.http.get('/api/workerById/'+id)\r\n  }\r\n\r\n  public addReview(review): Observable<any> {\r\n    return this.http.post('/api/worker-review',review)\r\n  }\r\n\r\n  public modify(id, image): Observable<any> {\r\n    return this.http.put('/api/modify-worker/' + id, {img: image})\r\n  }\r\n\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport {Router, CanActivate} from '@angular/router';\r\nimport {AuthentificationService} from './authentification.service';\r\n\r\n@Injectable()\r\nexport class AdminGuardService implements CanActivate {\r\n\r\n  isAdmin = 'false';\r\n\r\n  constructor(private auth: AuthentificationService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.auth.isLoggedIn()) {\r\n      this.router.navigateByUrl('/');\r\n      return false;\r\n    } else {\r\n      if(!this.auth.isAdmin()){\r\n        this.router.navigateByUrl('/');\r\n        return false;\r\n      }\r\n      return true\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!-- Header -->\\n  <mat-toolbar color={{color}}>\\n  <mat-toolbar-row>\\n  <h3 routerLink=\\\"\\\" >MyServices</h3>\\n  <span class=\\\"spacer\\\"></span>\\n    <button mat-icon-button routerLink=\\\"services\\\" *ngIf=\\\"isAuth() && isAdmin()\\\">\\n      <mat-icon class=\\\"icon\\\">grade</mat-icon>\\n    </button>\\n\\n    <button mat-icon-button routerLink=\\\"order-pending\\\" *ngIf=\\\"isWorker()\\\">\\n      <mat-icon>near_me</mat-icon>\\n    </button>\\n    <button id=\\\"b1\\\" mat-icon-button routerLink=\\\"cart\\\" *ngIf=\\\"isAuth()\\\">\\n      <mat-icon matBadge = {{OrderNumber}} >near_me</mat-icon>\\n    </button>\\n    <button mat-icon-button routerLink=\\\"profile\\\" *ngIf=\\\"isAuth()\\\">\\n      <mat-icon>how_to_reg</mat-icon>\\n    </button>\\n    <button mat-icon-button routerLink=\\\"worker-profile\\\" *ngIf=\\\"isWorker()\\\">\\n      <mat-icon>how_to_reg</mat-icon>\\n    </button>\\n\\n    <button mat-button [matMenuTriggerFor]=\\\"menu\\\"><mat-icon class=\\\"icon\\\">menu</mat-icon></button>\\n    <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n      <button mat-menu-item routerLink=\\\"\\\" >Accueil</button>\\n      <button mat-menu-item routerLink=\\\"login\\\" *ngIf=\\\"!isAuth() && !isWorker()\\\">Se connecter</button>\\n      <button mat-menu-item routerLink=\\\"register\\\" *ngIf=\\\"!isAuth() && !isWorker()\\\">S'enregistrer</button>\\n      <button mat-menu-item routerLink=\\\"worker-login\\\" *ngIf=\\\"!isAuth() && !isWorker()\\\">Espace livreur</button>\\n      <button mat-menu-item routerLink=\\\"worker-register\\\" *ngIf=\\\"!isAuth() && !isWorker()\\\">Demander a devenir livreur</button>\\n      <button mat-menu-item (click)=\\\"Logout() \\\" *ngIf=\\\"isAuth()\\\">Se deconnecter</button>\\n      <button mat-menu-item (click)=\\\"LogoutWorker()\\\" *ngIf=\\\"isWorker()\\\">Se deconnecter</button>\\n    </mat-menu>\\n\\n  </mat-toolbar-row>\\n\\n  </mat-toolbar>\\n\\n<!-- Router outlet corresponding to the uri -->\\n<router-outlet></router-outlet>\\n\\n\"","module.exports = \"/* CSS for the app component */\\n.spacer {\\n  flex: 1 1 auto; }\\n.icon {\\n  padding: 0 14px; }\\n.mat-toolbar {\\n  box-shadow: 0 0 25px rgba(0, 0, 0, 0.2); }\\n#b1 {\\n  margin-right: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXFVzZXJzXFxNYXR0aGV3XFxEZXNrdG9wXFxQcm9qZXRfV0VCL3NyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOEJBQUE7QUFFQTtFQUNFLGNBQWMsRUFBQTtBQUdoQjtFQUNFLGVBQWUsRUFBQTtBQUdqQjtFQUNFLHVDQUE4QixFQUFBO0FBSWhDO0VBQ0Usa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDU1MgZm9yIHRoZSBhcHAgY29tcG9uZW50ICovXHJcblxyXG4uc3BhY2Vye1xyXG4gIGZsZXg6IDEgMSBhdXRvO1xyXG59XHJcblxyXG4uaWNvbntcclxuICBwYWRkaW5nOiAwIDE0cHg7XHJcbn1cclxuXHJcbi5tYXQtdG9vbGJhcntcclxuICBib3gtc2hhZG93OiAwIDAgMjVweCByZ2JhKCMwMDAsIDAuMik7XHJcbn1cclxuXHJcblxyXG4jYjF7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xyXG59XHJcbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthentificationService} from '../authentification.service';\nimport {OrderService} from '../order.service';\nimport {Location} from '@angular/common';\nimport {WorkerAuthService} from '../WorkerAuth.service';\nimport {ThemePalette} from '@angular/material';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  color = 'accent';\n\n  Auth = false;\n  Admin = false;\n  Worker = false;\n\n  // We refresh the order count when navigating and the display the content in a certain color depending of the routes\n  constructor(private router: Router,\n              private auth: AuthentificationService,\n              private order: OrderService,\n              private worker: WorkerAuthService,\n              private location: Location) {\n    router.events.subscribe(val => {\n      this.ngOnInit()\n      if (location.path() === '/worker-login' ||\n        location.path() === '/worker-register' ||\n        location.path() === '/worker-profile' ||\n        location.path() === '/order-pending') {\n        this.color = 'primary';\n      } else {\n        this.color = 'accent';\n      }\n    });\n  }\n\n  OrderNumber = 0;\n\n\n  ngOnInit(): void {\n    if (this.auth.isLoggedIn()) {\n      this.OrderCount();\n      this.Auth = true;\n      this.Admin = this.auth.isAdmin()\n    }\n    this.Worker = this.worker.isLoggedIn()\n  }\n\n\n  Login() {\n    this.router.navigate(['/login']);\n  }\n\n  Profile() {\n    this.router.navigate(['/profile']);\n  }\n\n\n  isAuth() {\n    return this.Auth\n  }\n\n  isWorker() {\n    return this.Worker\n  }\n\n  isAdmin() {\n    return this.Admin\n  }\n\n  Services() {\n    this.router.navigate(['']);\n  }\n\n  Logout() {\n    this.auth.logout();\n    this.Auth = false;\n    this.router.navigate(['']);\n  }\n\n  Register() {\n  this.router.navigate(['register']);\n}\n\n\n\n  LogoutWorker() {\n    this.worker.logout();\n    this.Worker = false;\n    this.router.navigate(['']);\n  }\n\n\n// We count the number of order of a client\n  OrderCount() {\n    this.auth.profile().subscribe(\n      user => {\n        this.order.getAllPendingOrders(user.id).subscribe(data => {\n          this.OrderNumber = data.length;\n        });\n      },\n      err => {\n        console.error((err));\n      }\n    );\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {\n  MatCardModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatExpansionModule,\n  MatSidenavModule,\n  MatSelectModule,\n  MatMenuModule, MatIconModule, MatListModule, MatProgressBarModule, MatDialogModule, MatSliderModule, MatBadgeModule, MatTableModule\n} from '@angular/material';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RegisterComponent } from './register/register.component';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HttpClientModule} from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport {ProfileComponent, UploadProfileComponent} from './profile/profile.component';\nimport { AuthentificationService} from '../authentification.service';\nimport { AuthGuardService} from '../auth-guard.service';\nimport { UploadServiceComponent, ServicesComponent} from './services/services.component';\nimport { ServicesListComponent } from './services-list/services-list.component';\nimport {ServicesService} from '../services.service';\nimport {AdminGuardService} from '../admin-guard.service';\nimport {OrderService} from '../order.service';\nimport { CartComponent } from './cart/cart.component';\nimport { WorkerLoginComponent } from './worker-login/worker-login.component';\nimport {WorkerAuthService} from '../WorkerAuth.service';\nimport { WorkerRegisterComponent } from './worker-register/worker-register.component';\nimport {OrderInfoDialogComponent, UploadWorkerProfileComponent, WorkerProfileComponent} from './worker-profile/worker-profile.component';\nimport { OrderPendingComponent } from './order-pending/order-pending.component';\nimport {MatSnackBarModule} from '@angular/material';\nimport { ServicesModifyComponent } from './services-modify/services-modify.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst appRoutes: Routes = [\n  { path: 'register', component: RegisterComponent},\n  { path: 'home', component: HomeComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'services', component: ServicesComponent, canActivate: [AdminGuardService]},\n  { path: 'services-modify/:id', component: ServicesModifyComponent, canActivate: [AdminGuardService]},\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuardService]},\n  { path: 'cart', component: CartComponent, canActivate: [AuthGuardService]},\n  { path: 'worker-login', component: WorkerLoginComponent},\n  { path: 'worker-register', component: WorkerRegisterComponent},\n  { path: 'worker-profile', component: WorkerProfileComponent},\n  { path: 'order-pending', component: OrderPendingComponent},\n  { path: '', component: ServicesListComponent},\n  { path: 'not-found', component: NotFoundComponent},\n  { path: '**', redirectTo: 'not-found'}\n]\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProfileComponent,\n    ServicesComponent,\n    ServicesListComponent,\n    UploadServiceComponent,\n    CartComponent,\n    WorkerLoginComponent,\n    WorkerRegisterComponent,\n    WorkerProfileComponent,\n    OrderPendingComponent,\n    OrderInfoDialogComponent,\n    UploadProfileComponent,\n    UploadWorkerProfileComponent,\n    ServicesModifyComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSidenavModule,\n    MatMenuModule,\n    MatIconModule,\n    MatSidenavModule,\n    HttpClientModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatSliderModule,\n    MatTableModule,\n    RouterModule.forRoot(appRoutes),\n    MatListModule,\n    MatBadgeModule,\n  ],\n  entryComponents : [UploadWorkerProfileComponent, UploadServiceComponent, OrderInfoDialogComponent, UploadProfileComponent],\n  providers: [AuthGuardService, AuthentificationService, ServicesService, AdminGuardService, OrderService, WorkerAuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<!-- We use mat-table from Angular material to display the current orders of the client -->\\n<!-- All our data is stored in the array 'dataSource' -->\\n<table mat-table [dataSource]=\\\"dataSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\" >\\n\\n  <!-- in 'element' there is all the infos of a client order  -->\\n  <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of displayedColumns2\\\"> <!--  we use the directive ngFor to display all the columns -->\\n    <th mat-header-cell *matHeaderCellDef>{{column}}</th> <!--  we define the header of the table -->\\n    <td mat-cell *matCellDef=\\\"let element\\\" [style.color]=\\\"getColor(element[column])\\\"> {{element[column]}} </td>\\n  </ng-container>\\n\\n  <!-- We define the detail that will expanded when clicking on the order -->\\n  <ng-container matColumnDef=\\\"expandedDetail\\\">\\n    <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"displayedColumns.length\\\">\\n      <div class=\\\"example-element-detail\\\" [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n        <div class=\\\"example-element-description\\\">\\n          <div class=\\\"order-container\\\">\\n            <img id=\\\"img1\\\" [src]=\\\"element.image\\\">\\n            <h3>{{element.price}} €</h3>\\n            <h4>{{element.desc}}</h4>\\n          </div>\\n          <div class=\\\"worker-container\\\" *ngIf=\\\"element.idWorker\\\">\\n            <h3>Ta commande sera réalisée par :</h3>\\n            <h2>{{element.firstname}} {{element.lastname}}</h2>\\n            <img id=\\\"img1\\\" [src]=\\\"element.imageWorker\\\">\\n          </div>\\n          <div class=\\\"worker-container\\\" *ngIf=\\\"!element.idWorker\\\">\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"orderDelete(element.idOrder)\\\">Annuler la commande</button>\\n          </div>\\n        </div>\\n      </div>\\n    </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"choose\\\">\\n    <th mat-header-cell *matHeaderCellDef></th>\\n    <th mat-cell *matCellDef=\\\"let row\\\">\\n      <mat-icon>keyboard_arrow_down</mat-icon>\\n    </th>\\n  </ng-container>\\n\\n  <!-- we tell the table which columns will be rendered in the header and data rows -->\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let element; columns: displayedColumns;\\\"\\n      class=\\\"example-element-row\\\"\\n      [class.example-expanded-row]=\\\"expandedElement === element\\\"\\n      (click)=\\\"expandedElement = expandedElement === element ? null : element\\\">\\n  </tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n</table>\\n\\n\"","module.exports = \"/*  CSS of the cart component */\\n#img1 {\\n  min-width: 100px;\\n  max-width: 200px;\\n  width: 100%;\\n  margin: 0 auto;\\n  margin-top: 10%;\\n  margin-bottom: 10%; }\\ntable {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n  margin: 0 auto;\\n  margin-top: 10%;\\n  margin-bottom: 10%; }\\ntable .example-element-description {\\n    padding: 16px;\\n    width: 100%;\\n    text-align: center;\\n    display: block;\\n    float: left; }\\ntable .example-element-description .order-container {\\n      width: 50%;\\n      display: block;\\n      float: left; }\\ntable .example-element-description .worker-container {\\n      width: 50%;\\n      display: block;\\n      float: left; }\\n.mat-raised-button {\\n  margin-top: 100px; }\\ntr.example-detail-row {\\n  height: 0; }\\ntr.example-element-row:not(.example-expanded-row):hover {\\n  background: #f5f5f5; }\\ntr.example-element-row:not(.example-expanded-row):active {\\n  background: #efefef; }\\n.example-element-row td {\\n  border-bottom-width: 0; }\\n.example-element-detail {\\n  overflow: hidden;\\n  display: flex; }\\n.example-element-symbol {\\n  font-weight: bold;\\n  font-size: 40px;\\n  line-height: normal; }\\n.example-element-description-attribution {\\n  opacity: 0.5; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FydC9DOlxcVXNlcnNcXE1hdHRoZXdcXERlc2t0b3BcXFByb2pldF9XRUIvc3JjXFxhcHBcXGNhcnRcXGNhcnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0JBQUE7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsV0FBWTtFQUNaLGNBQWM7RUFDZCxlQUFlO0VBQ2Ysa0JBQWtCLEVBQUE7QUFHcEI7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFdBQVk7RUFDWixjQUFjO0VBQ2QsZUFBZTtFQUNmLGtCQUFrQixFQUFBO0FBTnBCO0lBUUksYUFBYTtJQUNiLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLFdBQVcsRUFBQTtBQVpmO01BY00sVUFBVTtNQUNWLGNBQWM7TUFDZCxXQUFXLEVBQUE7QUFoQmpCO01BbUJNLFVBQVU7TUFDVixjQUFjO01BQ2QsV0FBVyxFQUFBO0FBS2pCO0VBQ0UsaUJBQWlCLEVBQUE7QUFHbkI7RUFDRSxTQUFTLEVBQUE7QUFHWDtFQUNFLG1CQUFtQixFQUFBO0FBR3JCO0VBQ0UsbUJBQW1CLEVBQUE7QUFHckI7RUFDRSxzQkFBc0IsRUFBQTtBQUd4QjtFQUNFLGdCQUFnQjtFQUNoQixhQUFhLEVBQUE7QUFLZjtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsbUJBQW1CLEVBQUE7QUFLckI7RUFDRSxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jYXJ0L2NhcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAgQ1NTIG9mIHRoZSBjYXJ0IGNvbXBvbmVudCAqL1xyXG5cclxuI2ltZzF7XHJcbiAgbWluLXdpZHRoOiAxMDBweDtcclxuICBtYXgtd2lkdGg6IDIwMHB4O1xyXG4gIHdpZHRoOiAxMDAlIDtcclxuICBtYXJnaW46IDAgYXV0bztcclxuICBtYXJnaW4tdG9wOiAxMCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTAlO1xyXG59XHJcblxyXG50YWJsZXtcclxuICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gIG1heC13aWR0aDogNTAwcHg7XHJcbiAgd2lkdGg6IDEwMCUgO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIG1hcmdpbi10b3A6IDEwJTtcclxuICBtYXJnaW4tYm90dG9tOiAxMCU7XHJcbiAgLmV4YW1wbGUtZWxlbWVudC1kZXNjcmlwdGlvbiB7XHJcbiAgICBwYWRkaW5nOiAxNnB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgLm9yZGVyLWNvbnRhaW5lcntcclxuICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgfVxyXG4gICAgLndvcmtlci1jb250YWluZXJ7XHJcbiAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBmbG9hdDogbGVmdDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5tYXQtcmFpc2VkLWJ1dHRvbntcclxuICBtYXJnaW4tdG9wOiAxMDBweDtcclxufVxyXG5cclxudHIuZXhhbXBsZS1kZXRhaWwtcm93IHtcclxuICBoZWlnaHQ6IDA7XHJcbn1cclxuXHJcbnRyLmV4YW1wbGUtZWxlbWVudC1yb3c6bm90KC5leGFtcGxlLWV4cGFuZGVkLXJvdyk6aG92ZXIge1xyXG4gIGJhY2tncm91bmQ6ICNmNWY1ZjU7XHJcbn1cclxuXHJcbnRyLmV4YW1wbGUtZWxlbWVudC1yb3c6bm90KC5leGFtcGxlLWV4cGFuZGVkLXJvdyk6YWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kOiAjZWZlZmVmO1xyXG59XHJcblxyXG4uZXhhbXBsZS1lbGVtZW50LXJvdyB0ZCB7XHJcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMDtcclxufVxyXG5cclxuLmV4YW1wbGUtZWxlbWVudC1kZXRhaWwge1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgZGlzcGxheTogZmxleDtcclxufVxyXG5cclxuXHJcblxyXG4uZXhhbXBsZS1lbGVtZW50LXN5bWJvbCB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgZm9udC1zaXplOiA0MHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XHJcbn1cclxuXHJcblxyXG5cclxuLmV4YW1wbGUtZWxlbWVudC1kZXNjcmlwdGlvbi1hdHRyaWJ1dGlvbiB7XHJcbiAgb3BhY2l0eTogMC41O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {AuthentificationService} from '../../authentification.service';\nimport {OrderService} from '../../order.service';\nimport {MatTableDataSource} from '@angular/material';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {WorkerAuthService} from '../../WorkerAuth.service';\nimport {Router} from '@angular/router';\n\n// We define the interface Order which correspond to the info of the order + the infos of the service\n\ninterface Order {\n  idOrder: number;\n  orderDate: string;\n  orderStatus: string;\n  name: string;\n  desc: string;\n  price: number;\n  image: string;\n  imageWorker: string;\n}\n\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss'],\n  // We define an animation with @angular/animation, by default the height is 0 and when clicking we change of state and we expand the details\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class CartComponent implements OnInit {\n\n // We will us this array to store the response of the http request\n  Orders: Order[] = [];\n\n  dataSource;\n  expandedElement: Order | null;\n\n  // We define in which order we will display the column\n  displayedColumns: string[] = ['idOrder', 'name', 'orderStatus', 'orderDate','choose'];\n  displayedColumns2: string[] = ['idOrder', 'name', 'orderStatus', 'orderDate'];\n\n  // We import the services that we will use in this component\n  constructor(private auth: AuthentificationService,\n              private worker: WorkerAuthService,\n              private order: OrderService,\n              private router: Router) { }\n\n  // ngOnInit() is the function that will be executed at the start of the script\n  ngOnInit() {\n    this.getAllOrder();\n  }\n\n\n  // we display the column with a color corresponding to the order status\n  getColor(status): string {\n    if (status.toString() === 'pending') {\n      return 'red';\n    } else {\n      if (status.toString() === 'On his way') {\n        return 'lime';\n      }\n      return 'black';\n    }\n  }\n\n  orderDelete(id){\n    console.log(id)\n    this.order.orderDelete(id).subscribe(\n      () => {\n        console.log('Order deleted')\n        for (let i = 0; i < this.Orders.length; i++) {\n          if (this.Orders[i].idOrder === id) {\n            this.Orders.splice(i, 1);\n            this.dataSource = new MatTableDataSource(this.Orders);\n            this.router.navigate(['']);\n            this.router.navigate(['cart']);\n          }\n        }\n      }\n    )\n  }\n\n  // We get all the orders of a user\n  getAllOrder() {\n    this.auth.profile().subscribe(\n      user => {\n        this.order.getAllPendingOrders(user.id).subscribe(data => {\n          this.getInfoOrder(data);\n        });\n      },\n      err => {\n        console.error((err));\n      }\n    );\n  }\n\n  // And then we get the info of the service corresponding to the order\n  getInfoOrder(orders) {\n    for (const order of orders) {\n      this.order.getServiceByOrder(order.idOrder).subscribe(data => {\n\n        const aOrder = {\n          idOrder: 0,\n          idWorker: 0,\n          orderDate: '',\n          orderStatus: '',\n          name: '',\n          desc: '',\n          price: 0,\n          firstname: '',\n          lastname: '',\n          image: '',\n          imageWorker: ''\n        };\n\n        aOrder.idOrder = order.idOrder;\n        aOrder.orderStatus = order.orderStatus;\n        aOrder.orderDate = 'il y a ' + (Math.round((new Date().getTime() - new Date(order.orderDate).getTime())/60000)).toString() + ' minutes';\n        aOrder.idWorker = order.idWorker;\n\n        if(data){\n          aOrder.name = data.name;\n          aOrder.desc = data.desc;\n          aOrder.price = data.price;\n          aOrder.image = data.image;\n\n        }\n\n        if (order.idWorker) {\n          this.worker.workerById(order.idWorker).subscribe(worker => {\n            aOrder.firstname = worker.firstname;\n            aOrder.lastname = worker.lastname;\n            aOrder.imageWorker = worker.image;\n            this.Orders.push(aOrder);\n            this.dataSource = new MatTableDataSource(this.Orders);\n          });\n        } else {\n          this.Orders.push(aOrder);\n          this.dataSource = new MatTableDataSource(this.Orders);\n        }\n      });\n    }\n  }\n}\n","module.exports = \"<h1>Home</h1>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component} from '@angular/core';\n\n/** @title Responsive sidenav */\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.component.html',\n  styleUrls: ['home.component.scss'],\n})\nexport class HomeComponent{\n\n}\n","module.exports = \"<!-- We use the reactive form method for the login -->\\n\\n<mat-card>\\n  <h2>Connexion</h2>\\n  <form class=\\\"example-form\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onSubmitForm()\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n    </mat-form-field>\\n\\n    <!-- we disable the button if the form is not valid -->\\n    <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"userForm.invalid\\\">Se connecter</button>\\n  </form>\\n</mat-card>\\n\"","module.exports = \"/* CSS of the login */\\nh2 {\\n  text-align: center; }\\nmat-card {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n  margin: 0 auto;\\n  margin-top: 10%;\\n  margin-bottom: 10%; }\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 90%; }\\n.example-full-width {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vQzpcXFVzZXJzXFxNYXR0aGV3XFxEZXNrdG9wXFxQcm9qZXRfV0VCL3NyY1xcYXBwXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUJBQUE7QUFFQTtFQUNFLGtCQUFrQixFQUFBO0FBR3BCO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixXQUFZO0VBQ1osY0FBYztFQUNkLGVBQWU7RUFDZixrQkFBa0IsRUFBQTtBQUdwQjtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsVUFBVyxFQUFBO0FBR2I7RUFDRSxXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIENTUyBvZiB0aGUgbG9naW4gKi9cclxuXHJcbmgyIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbm1hdC1jYXJkIHtcclxuICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gIG1heC13aWR0aDogNTAwcHg7XHJcbiAgd2lkdGg6IDEwMCUgO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIG1hcmdpbi10b3A6IDEwJTtcclxuICBtYXJnaW4tYm90dG9tOiAxMCU7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZvcm0ge1xyXG4gIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICB3aWR0aDogOTAlIDtcclxufVxyXG5cclxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl19 */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AuthentificationService, TokenPayload} from '../../authentification.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n\n// We define credentials to ensure to not have a conflict of data type with the authentification service\n  credentials: TokenPayload = {\n    id: 0,\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    phone: '',\n    city: '',\n    address: '',\n    code: '',\n  };\n\n  userForm: FormGroup;\n\n\n  constructor(private formBuilder: FormBuilder,\n              private auth: AuthentificationService,\n              private router: Router) {}\n  ngOnInit(): void {\n    if(this.auth.isLoggedIn()){\n      this.auth.logout();\n    }\n    this.initForm();\n  }\n// We Init the form with the validators\n  initForm() {\n    this.userForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n// We store the result of the form and we send them to the server. If the infos are correct\n// we redirect the user and if not we alert the user\n  onSubmitForm() {\n\n    const formValue = this.userForm.value;\n    this.credentials.email = formValue.email;\n    this.credentials.password = formValue.password;\n\n    this.auth.login(this.credentials).subscribe((data) => {\n        console.log(data);\n        if (data.error == 'Incorrect Details') {\n        alert(data.error);\n      } else {\n        this.router.navigate(['profile']);\n        console.log('Welcome !');\n      }\n    });\n  }\n}\n\n","module.exports = \"<h1>PAGE NOT FOUND : ERROR 404</h1>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<!-- We use mat-table from Angular material to display all the pending orders -->\\n<!-- All our data is stored in the array 'dataSource' -->\\n<table mat-table [dataSource]=\\\"dataSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\" >\\n\\n  <!-- in 'element' there is all the infos of a client order  -->\\n  <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of displayedColumns2\\\">\\n    <th mat-header-cell *matHeaderCellDef>{{column}}</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column]}} </td>\\n  </ng-container>\\n\\n  <!-- We define the detail that will expanded when clicking on the order -->\\n  <ng-container matColumnDef=\\\"expandedDetail\\\">\\n    <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"displayedColumns.length\\\">\\n      <div class=\\\"example-element-detail\\\" [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n        <div class=\\\"example-element-description\\\">\\n          <div class=\\\"order-container\\\">\\n            <img id=\\\"img1\\\" [src]=\\\"element.image\\\">\\n            <h3>{{element.firstname}} {{element.lastname}}</h3>\\n            <h3>+33 {{element.phone}}</h3>\\n            <h4>{{element.address}}</h4>\\n          </div>\\n          <div class=\\\"worker-container\\\">\\n            <h2>Recompense: {{element.price}} €</h2>\\n            <h3>Description: {{element.desc}}</h3>\\n            <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" (click)=\\\"PickAnOrder(element)\\\">Pick this one</button>\\n          </div>\\n        </div>\\n      </div>\\n    </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"choose\\\">\\n    <th mat-header-cell *matHeaderCellDef></th>\\n    <th mat-cell *matCellDef=\\\"let row\\\">\\n      <mat-icon>keyboard_arrow_down</mat-icon>\\n    </th>\\n  </ng-container>\\n\\n\\n  <!-- we tell the table which columns will be rendered in the header and data rows -->\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let element; columns: displayedColumns;\\\"\\n      class=\\\"example-element-row\\\"\\n      [class.example-expanded-row]=\\\"expandedElement === element\\\"\\n      (click)=\\\"expandedElement = expandedElement === element ? null : element\\\">\\n  </tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n</table>\\n\\n\"","module.exports = \"/* CSS of order-pending */\\n#img1 {\\n  min-width: 100px;\\n  max-width: 200px;\\n  width: 100%;\\n  margin: 0 auto;\\n  margin-top: 10%;\\n  margin-bottom: 10%; }\\ntable {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n  margin: 0 auto;\\n  margin-top: 10%;\\n  margin-bottom: 10%; }\\ntable .example-element-description {\\n    padding: 16px;\\n    width: 100%;\\n    text-align: center;\\n    display: block;\\n    float: left; }\\ntable .example-element-description .order-container {\\n      width: 50%;\\n      display: block;\\n      float: left; }\\ntable .example-element-description .worker-container {\\n      width: 50%;\\n      display: block;\\n      float: left; }\\n.h2 {\\n  margin-top: 100px; }\\ntr.example-detail-row {\\n  height: 0; }\\ntr.example-element-row:not(.example-expanded-row):hover {\\n  background: #f5f5f5; }\\ntr.example-element-row:not(.example-expanded-row):active {\\n  background: #efefef; }\\n.example-element-row td {\\n  border-bottom-width: 0; }\\n.example-element-detail {\\n  overflow: hidden;\\n  display: flex; }\\n.example-element-diagram {\\n  min-width: 80px;\\n  border: 2px solid black;\\n  padding: 8px;\\n  font-weight: lighter;\\n  margin: 8px 0;\\n  height: 104px; }\\n.example-element-symbol {\\n  font-weight: bold;\\n  font-size: 40px;\\n  line-height: normal; }\\n.example-element-description-attribution {\\n  opacity: 0.5; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3JkZXItcGVuZGluZy9DOlxcVXNlcnNcXE1hdHRoZXdcXERlc2t0b3BcXFByb2pldF9XRUIvc3JjXFxhcHBcXG9yZGVyLXBlbmRpbmdcXG9yZGVyLXBlbmRpbmcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEseUJBQUE7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsV0FBWTtFQUNaLGNBQWM7RUFDZCxlQUFlO0VBQ2Ysa0JBQWtCLEVBQUE7QUFJcEI7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFdBQVk7RUFDWixjQUFjO0VBQ2QsZUFBZTtFQUNmLGtCQUFrQixFQUFBO0FBTnBCO0lBUUksYUFBYTtJQUNiLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLFdBQVcsRUFBQTtBQVpmO01BY00sVUFBVTtNQUNWLGNBQWM7TUFDZCxXQUFXLEVBQUE7QUFoQmpCO01BbUJNLFVBQVU7TUFDVixjQUFjO01BQ2QsV0FBVyxFQUFBO0FBS2pCO0VBQ0UsaUJBQWlCLEVBQUE7QUFHbkI7RUFDRSxTQUFTLEVBQUE7QUFHWDtFQUNFLG1CQUFtQixFQUFBO0FBR3JCO0VBQ0UsbUJBQW1CLEVBQUE7QUFHckI7RUFDRSxzQkFBc0IsRUFBQTtBQUd4QjtFQUNFLGdCQUFnQjtFQUNoQixhQUFhLEVBQUE7QUFHZjtFQUNFLGVBQWU7RUFDZix1QkFBdUI7RUFDdkIsWUFBWTtFQUNaLG9CQUFvQjtFQUNwQixhQUFhO0VBQ2IsYUFBYSxFQUFBO0FBR2Y7RUFDRSxpQkFBaUI7RUFDakIsZUFBZTtFQUNmLG1CQUFtQixFQUFBO0FBR3JCO0VBQ0UsWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvb3JkZXItcGVuZGluZy9vcmRlci1wZW5kaW5nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQ1NTIG9mIG9yZGVyLXBlbmRpbmcgKi9cclxuXHJcbiNpbWcxe1xyXG4gIG1pbi13aWR0aDogMTAwcHg7XHJcbiAgbWF4LXdpZHRoOiAyMDBweDtcclxuICB3aWR0aDogMTAwJSA7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgbWFyZ2luLXRvcDogMTAlO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwJTtcclxufVxyXG5cclxuXHJcbnRhYmxle1xyXG4gIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICB3aWR0aDogMTAwJSA7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgbWFyZ2luLXRvcDogMTAlO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwJTtcclxuICAuZXhhbXBsZS1lbGVtZW50LWRlc2NyaXB0aW9uIHtcclxuICAgIHBhZGRpbmc6IDE2cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAub3JkZXItY29udGFpbmVye1xyXG4gICAgICB3aWR0aDogNTAlO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB9XHJcbiAgICAud29ya2VyLWNvbnRhaW5lcntcclxuICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmgye1xyXG4gIG1hcmdpbi10b3A6IDEwMHB4O1xyXG59XHJcblxyXG50ci5leGFtcGxlLWRldGFpbC1yb3cge1xyXG4gIGhlaWdodDogMDtcclxufVxyXG5cclxudHIuZXhhbXBsZS1lbGVtZW50LXJvdzpub3QoLmV4YW1wbGUtZXhwYW5kZWQtcm93KTpob3ZlciB7XHJcbiAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcclxufVxyXG5cclxudHIuZXhhbXBsZS1lbGVtZW50LXJvdzpub3QoLmV4YW1wbGUtZXhwYW5kZWQtcm93KTphY3RpdmUge1xyXG4gIGJhY2tncm91bmQ6ICNlZmVmZWY7XHJcbn1cclxuXHJcbi5leGFtcGxlLWVsZW1lbnQtcm93IHRkIHtcclxuICBib3JkZXItYm90dG9tLXdpZHRoOiAwO1xyXG59XHJcblxyXG4uZXhhbXBsZS1lbGVtZW50LWRldGFpbCB7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1lbGVtZW50LWRpYWdyYW0ge1xyXG4gIG1pbi13aWR0aDogODBweDtcclxuICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XHJcbiAgbWFyZ2luOiA4cHggMDtcclxuICBoZWlnaHQ6IDEwNHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1lbGVtZW50LXN5bWJvbCB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgZm9udC1zaXplOiA0MHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XHJcbn1cclxuXHJcbi5leGFtcGxlLWVsZW1lbnQtZGVzY3JpcHRpb24tYXR0cmlidXRpb24ge1xyXG4gIG9wYWNpdHk6IDAuNTtcclxufVxyXG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {OrderService} from '../../order.service';\nimport { MatTableDataSource} from '@angular/material';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {WorkerAuthService} from '../../WorkerAuth.service';\nimport {AuthentificationService} from '../../authentification.service';\n\n// We define the interface Order which correspond to the info of the order\n\ninterface Order {\n  idOrder: number;\n  orderDate: string;\n  orderStatus: string;\n}\n\n\n@Component({\n  selector: 'app-order-pending',\n  templateUrl: './order-pending.component.html',\n  styleUrls: ['./order-pending.component.scss'],\n  // We define an animation with @angular/animation, by default the height is 0 and when clicking we change of state and we expand the details\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class OrderPendingComponent implements OnInit {\n\n// We will us this array to store the response of the http request\n  Orders: Order[] = [];\n  dataSource;\n  expandedElement: Order | null;\n\n  // We define in which order we will display the column\n  displayedColumns: string[] = ['idOrder', 'name', 'orderDate', 'choose'];\n  displayedColumns2: string[] = ['idOrder', 'name', 'orderDate'];\n\n\n  // We import the services that we will use in this component\n  constructor(private order: OrderService, private auth: AuthentificationService  , private worker: WorkerAuthService) { }\n\n\n  // ngOnInit() is the function that will be executed at the start of the script\n  ngOnInit() {\n    this.getAllPendingOrder();\n  }\n\n\n  // We get all the pending orders\n  getAllPendingOrder() {\n    this.order.getPendingOrders().subscribe(data => {\n      this.getInfoOrder(data);\n    });\n  }\n\n  // When a worker pick an order we change the status of the order an we acualise the list of pending orders\n  PickAnOrder(name) {\n    console.log(name);\n    this.worker.profile().subscribe(\n      user => {\n        this.order.PickAnOrder(name, user.id).subscribe(data => {\n          if(!data.error){\n            for (let i = 0; i < this.Orders.length; i++) {\n              if (this.Orders[i].idOrder === name.idOrder) {\n                this.Orders.splice(i, 1);\n                this.Orders.sort(function(obj1, obj2) {\n                  return obj1.idOrder - obj2.idOrder\n                });\n                this.dataSource = new MatTableDataSource(this.Orders);\n              }\n            }\n            console.log(data);\n          }\n          else {\n            alert('Tu ne peux pas prendre plusieurs commandes de client différents')\n          }\n        });\n      },\n      err => {\n        console.log(err)\n      }\n    );\n  }\n\n\n  // this function is used to get complementary info of the order (user info & service info)\n  getInfoOrder(orders) {\n    for (const order of orders) {\n      this.order.getServiceByOrder(order.idOrder).subscribe(data => {\n        let aOrder = {\n          idOrder: 0,\n          orderDate: '',\n          orderStatus: '',\n          name: '',\n          desc: '',\n          price: 0,\n          firstname: '',\n          lastname: '',\n          address: '',\n          phone: '',\n          image: ''\n        };\n\n        aOrder.idOrder = order.idOrder;\n        aOrder.orderStatus = order.orderStatus;\n        aOrder.orderDate = 'il y a ' + (Math.round((new Date().getTime() - new Date(order.orderDate).getTime())/60000)).toString() + ' minutes';\n        if(data){\n          aOrder.name = data.name;\n          aOrder.desc = data.desc;\n          aOrder.price = data.price;\n        }\n\n        this.auth.userById(order.idUser).subscribe(user => {\n          aOrder.firstname = user.firstname;\n          aOrder.lastname = user.lastname;\n          aOrder.phone = user.phone;\n          aOrder.address = user.code + ' ' + user.city + ' ' + user.address\n          aOrder.image = user.image;\n          this.Orders.push(aOrder);\n          this.Orders.sort(function(obj1, obj2) {\n            return obj1.idOrder - obj2.idOrder\n          });\n          this.dataSource = new MatTableDataSource(this.Orders);\n        });\n      });\n    }\n  }\n}\n","module.exports = \"<!-- HTML Page for the user profile -->\\n\\n<div class=\\\"profile-container\\\">\\n  <div class=\\\"profile-menu\\\">\\n    <div class=\\\"image-container\\\">\\n      <img [src]=\\\"details?.image\\\" alt=\\\"\\\">\\n    </div>\\n    <ul>\\n      <li class=\\\"active\\\">Profile</li>\\n    </ul>\\n  </div>\\n  <div class=\\\"profile-content\\\">\\n    <div class=\\\"actions\\\">\\n      <button mat-icon-button (click)=\\\"openDialog()\\\">\\n        <mat-icon class=\\\"icon\\\">add_a_photo</mat-icon>\\n      </button>\\n      <button mat-icon-button>\\n        <mat-icon class=\\\"icon\\\">create</mat-icon>\\n      </button>\\n    </div>\\n    <div class=\\\"pic\\\">\\n      <img [src]=\\\"details?.image\\\" alt=\\\"\\\">\\n      <h2>{{details?.firstname}} {{details?.lastname}}</h2>\\n      <span>{{details?.email}}</span>\\n    </div>\\n    <div class=\\\"summary\\\">\\n      <div class=\\\"content\\\">\\n        <span>{{orderCount}}</span>\\n        <span>Services</span>\\n      </div>\\n      <div class=\\\"content\\\">\\n        <span>{{reviewCount}}</span>\\n        <span>Avis reçus</span>\\n      </div>\\n    </div>\\n    <div class=\\\"profile-details\\\">\\n      <table mat-table [dataSource]=\\\"dataSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\" >\\n        <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of displayedColumns\\\" >\\n          <th mat-header-cell *matHeaderCellDef ><h2 id=\\\"The\\\">Derniers avis reçus</h2></th>\\n          <td mat-cell *matCellDef=\\\"let element\\\" > {{element[column]}} </td>\\n        </ng-container>\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true;\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let element; columns: displayedColumns;\\\"></tr>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"/* CSS of the user profile */\\n.profile-container {\\n  max-width: 485px;\\n  width: 100%;\\n  height: 485px;\\n  margin: 0 auto;\\n  margin-top: 50px; }\\n.profile-container .profile-menu {\\n    float: left;\\n    width: 37%;\\n    height: 482px;\\n    background: #fff;\\n    box-shadow: 0 0 25px rgba(0, 0, 0, 0.2); }\\n.profile-container .profile-menu .image-container {\\n      width: 70px;\\n      height: 70px;\\n      margin: 60px; }\\n.profile-container .profile-menu .image-container img {\\n        max-width: 100%;\\n        height: 70px;\\n        border-radius: 50%; }\\n.profile-container .profile-menu .image-container img:hover {\\n          opacity: 0.8; }\\n.profile-container .profile-menu ul {\\n      list-style: none;\\n      margin: 0;\\n      padding: 0; }\\n.profile-container .profile-menu ul li {\\n        padding: 10px 20px;\\n        font-size: 13px; }\\n.profile-container .profile-menu ul li:hover, .profile-container .profile-menu ul li.active {\\n          background: #f7f7f7;\\n          border-left: 5px solid  #ff3c8a; }\\n.profile-container .profile-content {\\n    width: 63%;\\n    float: right;\\n    background: #fff;\\n    box-shadow: 0 0 25px rgba(0, 0, 0, 0.2); }\\n.profile-container .profile-content .actions {\\n      width: 100%;\\n      background: linear-gradient(to right, #ff3c8a 0%, #ffbcd7 100%);\\n      height: 40px;\\n      line-height: 40;\\n      color: #fff;\\n      padding: 20px 0 0 0; }\\n.profile-container .profile-content .actions button {\\n        padding-left: 20px;\\n        float: left; }\\n.profile-container .profile-content .actions button:hover {\\n          opacity: 0.8; }\\n.profile-container .profile-content .actions button + button {\\n        padding-right: 40px;\\n        float: right; }\\n.profile-container .profile-content .pic {\\n      background: linear-gradient(to right, #ff3c8a 0%, #ffbcd7 100%);\\n      text-align: center;\\n      color: #fff;\\n      padding: 0 0 20px 0; }\\n.profile-container .profile-content .pic img {\\n        width: 90px;\\n        height: 90px;\\n        border-radius: 50%; }\\n.profile-container .profile-content .pic img:hover {\\n          opacity: 0.8; }\\n.profile-container .profile-content .pic h2 {\\n        font-size: 17px;\\n        padding: 0;\\n        margin: 0;\\n        font-weight: 400; }\\n.profile-container .profile-content .pic span {\\n        font-size: 15px;\\n        font-weight: 300; }\\n.profile-container .profile-content .summary {\\n      color: #fff; }\\n.profile-container .profile-content .summary .content {\\n        width: 50%;\\n        float: left;\\n        text-align: center;\\n        display: block;\\n        background: linear-gradient(to right, #ff3c8a 0%, #ffbcd7 100%);\\n        padding: 10px 0; }\\n.profile-container .profile-content .summary .content span {\\n          display: block;\\n          font-size: 15px;\\n          font-weight: 500; }\\n.profile-container .profile-content .profile-details {\\n      padding-top: 20px;\\n      margin-top: 20px;\\n      text-align: center;\\n      height: 200px; }\\n.profile-container .profile-content .profile-details .table {\\n        width: 100%;\\n        float: left; }\\n#The {\\n  color: #000000;\\n  text-align: center; }\\ntable {\\n  height: 200px;\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9DOlxcVXNlcnNcXE1hdHRoZXdcXERlc2t0b3BcXFByb2pldF9XRUIvc3JjXFxhcHBcXHByb2ZpbGVcXHByb2ZpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNEJBQUE7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsYUFBYTtFQUNiLGNBQWM7RUFDZCxnQkFBZ0IsRUFBQTtBQUxsQjtJQU9JLFdBQVc7SUFDWCxVQUFVO0lBQ1YsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQix1Q0FBOEIsRUFBQTtBQVhsQztNQWFNLFdBQVc7TUFDWCxZQUFZO01BQ1osWUFBWSxFQUFBO0FBZmxCO1FBaUJRLGVBQWU7UUFDZixZQUFZO1FBQ1osa0JBQWlCLEVBQUE7QUFuQnpCO1VBcUJVLFlBQVksRUFBQTtBQXJCdEI7TUEwQk0sZ0JBQWdCO01BQ2hCLFNBQVM7TUFDVCxVQUFVLEVBQUE7QUE1QmhCO1FBOEJRLGtCQUFrQjtRQUNsQixlQUFlLEVBQUE7QUEvQnZCO1VBaUNVLG1CQUFtQjtVQUNuQiwrQkFBK0IsRUFBQTtBQWxDekM7SUF3Q0ksVUFBVTtJQUNWLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsdUNBQThCLEVBQUE7QUEzQ2xDO01BNkNNLFdBQVc7TUFDWCwrREFBK0Q7TUFDL0QsWUFBWTtNQUNaLGVBQWU7TUFDZixXQUFXO01BQ1gsbUJBQW1CLEVBQUE7QUFsRHpCO1FBb0RRLGtCQUFrQjtRQUNsQixXQUFXLEVBQUE7QUFyRG5CO1VBdURVLFlBQVksRUFBQTtBQXZEdEI7UUEyRFEsbUJBQW1CO1FBQ25CLFlBQVksRUFBQTtBQTVEcEI7TUFnRU0sK0RBQStEO01BQy9ELGtCQUFrQjtNQUNsQixXQUFXO01BQ1gsbUJBQW1CLEVBQUE7QUFuRXpCO1FBcUVRLFdBQVc7UUFDWCxZQUFZO1FBQ1osa0JBQWtCLEVBQUE7QUF2RTFCO1VBeUVVLFlBQVksRUFBQTtBQXpFdEI7UUE2RVEsZUFBZTtRQUNmLFVBQVU7UUFDVixTQUFTO1FBQ1QsZ0JBQWdCLEVBQUE7QUFoRnhCO1FBbUZRLGVBQWU7UUFDZixnQkFBZ0IsRUFBQTtBQXBGeEI7TUF3Rk0sV0FBVyxFQUFBO0FBeEZqQjtRQTBGUSxVQUFVO1FBQ1YsV0FBVztRQUNYLGtCQUFrQjtRQUNsQixjQUFjO1FBQ2QsK0RBQWdFO1FBQ2hFLGVBQWUsRUFBQTtBQS9GdkI7VUFpR1UsY0FBYztVQUNkLGVBQWU7VUFDZixnQkFBZ0IsRUFBQTtBQW5HMUI7TUF3R00saUJBQWlCO01BQ2pCLGdCQUFnQjtNQUNoQixrQkFBa0I7TUFDbEIsYUFBYSxFQUFBO0FBM0duQjtRQTZHUSxXQUFXO1FBQ1gsV0FBVyxFQUFBO0FBTW5CO0VBQ0UsY0FBYztFQUNkLGtCQUFrQixFQUFBO0FBR3BCO0VBQ0UsYUFBYTtFQUNiLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIENTUyBvZiB0aGUgdXNlciBwcm9maWxlICovXHJcblxyXG4ucHJvZmlsZS1jb250YWluZXJ7XHJcbiAgbWF4LXdpZHRoOiA0ODVweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDQ4NXB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgLnByb2ZpbGUtbWVudXtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDM3JTtcclxuICAgIGhlaWdodDogNDgycHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDI1cHggcmdiYSgjMDAwLCAwLjIpO1xyXG4gICAgLmltYWdlLWNvbnRhaW5lcntcclxuICAgICAgd2lkdGg6IDcwcHg7XHJcbiAgICAgIGhlaWdodDogNzBweDtcclxuICAgICAgbWFyZ2luOiA2MHB4O1xyXG4gICAgICBpbWd7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogNzBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOjUwJTtcclxuICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgb3BhY2l0eTogMC44O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgdWx7XHJcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgIG1hcmdpbjogMDtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgbGl7XHJcbiAgICAgICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICAmOmhvdmVyLCAmLmFjdGl2ZXtcclxuICAgICAgICAgIGJhY2tncm91bmQ6ICNmN2Y3Zjc7XHJcbiAgICAgICAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICAjZmYzYzhhO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAucHJvZmlsZS1jb250ZW50e1xyXG4gICAgd2lkdGg6IDYzJTtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMjVweCByZ2JhKCMwMDAsIDAuMik7XHJcbiAgICAuYWN0aW9uc3tcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgI2ZmM2M4YSAwJSwgI2ZmYmNkNyAxMDAlKTtcclxuICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICBsaW5lLWhlaWdodDogNDA7XHJcbiAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICBwYWRkaW5nOiAyMHB4IDAgMCAwO1xyXG4gICAgICBidXR0b257XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xyXG4gICAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICBvcGFjaXR5OiAwLjg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGJ1dHRvbitidXR0b257XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogNDBweDtcclxuICAgICAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC5waWN7XHJcbiAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgI2ZmM2M4YSAwJSwgI2ZmYmNkNyAxMDAlKTtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgcGFkZGluZzogMCAwIDIwcHggMDtcclxuICAgICAgaW1ne1xyXG4gICAgICAgIHdpZHRoOiA5MHB4O1xyXG4gICAgICAgIGhlaWdodDogOTBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgJjpob3ZlcntcclxuICAgICAgICAgIG9wYWNpdHk6IDAuODtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaDJ7XHJcbiAgICAgICAgZm9udC1zaXplOiAxN3B4O1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgIH1cclxuICAgICAgc3BhbntcclxuICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnN1bW1hcnl7XHJcbiAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAuY29udGVudHtcclxuICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICAjZmYzYzhhIDAlLCAjZmZiY2Q3IDEwMCUpO1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHggMDtcclxuICAgICAgICBzcGFue1xyXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnByb2ZpbGUtZGV0YWlsc3tcclxuICAgICAgcGFkZGluZy10b3A6IDIwcHg7XHJcbiAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgaGVpZ2h0OiAyMDBweDtcclxuICAgICAgLnRhYmxle1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4jVGhle1xyXG4gIGNvbG9yOiAjMDAwMDAwO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxudGFibGV7XHJcbiAgaGVpZ2h0OiAyMDBweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport { AuthentificationService, UserDetails } from '../../authentification.service';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatTableDataSource} from '@angular/material';\nimport {ServicesService} from '../../services.service';\nimport {DialogData, UploadServiceComponent} from '../services/services.component';\nimport {OrderService} from '../../order.service';\nimport {Router} from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n// We will store the user detail in that variable\n  details: UserDetails;\n  review = []\n  fileUrl = ''\n  dataSource\n  displayedColumns: string[] = ['Content'];\n  reviewCount = 0;\n  orderCount = 0;\n\n  constructor(private auth: AuthentificationService, public dialog: MatDialog, public order: OrderService, private router: Router) { }\n\n  // At the start of the script we initialise the profile by getting the info of the user\n  ngOnInit() {\n    this.auth.profile().subscribe(\n      user => {\n        this.details = user;\n        this.GetAllReview(user.id)\n        this.GetReviewCount(user.id)\n        this.GetOrderCount(user.id)\n      },\n      err => {\n        console.error((err));\n      }\n    );\n  }\n\n  GetAllReview(idUser) {\n    this.auth.getReview(idUser).subscribe(review => {\n        console.log(review)\n        for(const aReview of review){\n          const aRev = {\n            Content: ''\n          }\n          aRev.Content = aReview.Content;\n          this.review.push(aRev)\n          console.log(aRev)\n          console.log(this.review)\n          this.dataSource = new MatTableDataSource(this.review);\n        }\n    })\n  }\n\n\n  GetReviewCount(idUser) {\n    this.auth.getReviewCount(idUser).subscribe(review => {\n      this.reviewCount = review.count\n    })\n  }\n\n  GetOrderCount(idUser) {\n    this.order.getOrderCount(idUser).subscribe(order => {\n      this.orderCount = order.count\n    })\n  }\n\n\n  // If the admin click on the upload button if open a dialog page in which he will be able to download an image for the order\n  openDialog(): void {\n    const dialogRef = this.dialog.open(UploadProfileComponent, {\n      width: '250px',\n      data: {file: this.fileUrl}\n    });\n\n    // we store the image url which was upload by the admin\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.details.image = result\n        console.log(result)\n        this.auth.modify(this.details.id,result).subscribe()\n      }\n    });\n  }\n\n\n}\n\n\n// We create an other component in which we will display the window which will permit the admin to upload an image for the service\n@Component({\n  selector: 'app-upload-profile',\n  templateUrl: 'upload-profile.html',\n  styleUrls: ['../services/services.component.scss']\n})\nexport class UploadProfileComponent {\n\n  constructor(public dialogRef: MatDialogRef<UploadProfileComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private services: ServicesService) {}\n\n  fileIsUploading = false;\n  fileUrl: string;\n  fileUploaded = false;\n\n\n  // if the admin decide to not upload a file\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // Uploading the file on firebase and keeping the url of file,\n  // we store the state of upload to evit bug if the admin submit while the file is loading\n  onUploadFile(file: File) {\n    this.fileIsUploading = true;\n    this.services.uploadFile(file).then(\n      (url: string) => {\n        this.fileUrl = url;\n        this.data.file = url;\n        this.fileIsUploading = false;\n        this.fileUploaded = true ;\n      }\n    );\n  }\n\n  detectFiles(event) {\n    this.onUploadFile(event.target.files[0]);\n  }\n// We send back the file path to the service component\n  UploadValidate() {\n    this.data.file = this.fileUrl;\n    this.dialogRef.close(this.data.file);\n  }\n\n}\n","module.exports = \"<div class=\\\"order-dialog\\\">\\r\\n  <div mat-dialog-content>\\r\\n    <p>Upload File</p>\\r\\n    <input #file type=\\\"file\\\" [hidden]=\\\"true\\\" accept=\\\"image/*\\\" (change)=\\\"detectFiles($event)\\\">\\r\\n    <button mat-button (click)= \\\"file.click()\\\">\\r\\n      <mat-icon color=\\\"accent\\\">file_upload</mat-icon>\\r\\n    </button>\\r\\n    <h4 *ngIf=\\\"fileUploaded\\\">File uploaded</h4>\\r\\n  </div>\\r\\n  <div mat-dialog-actions>\\r\\n    <div class=\\\"center\\\">\\r\\n      <button mat-button (click)=\\\"onNoClick()\\\">Back</button>\\r\\n      <button mat-button (click)=\\\"UploadValidate()\\\" [disabled]=\\\"fileIsUploading\\\" [mat-dialog-close]=\\\"data.file\\\" cdkFocusInitial>Upload</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"<!-- We use the form reactive method -->\\n<mat-card>\\n  <h2>Création d'un compte</h2>\\n  <form class=\\\"example-form\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onSubmitForm()\\\"> <!-- Submitting will start this method -->\\n    <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr>\\n      <td><mat-form-field class=\\\"example-full-width\\\"> <!-- We define all of our inputs -->\\n        <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstname\\\">\\n      </mat-form-field></td>\\n      <td><mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastname\\\">\\n      </mat-form-field></td>\\n    </tr></table>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Address\\\" formControlName=\\\"address\\\">\\n    </mat-form-field>\\n    <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr>\\n      <td><mat-form-field class=\\\"example-full-width\\\"> <!-- We define all of our inputs -->\\n        <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n      </mat-form-field></td>\\n      <td><mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Postale Code\\\" formControlName=\\\"code\\\">\\n      </mat-form-field></td>\\n    </tr></table>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"cpassword\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <span matPrefix>+33 &nbsp;</span>\\n      <input type=\\\"tel\\\" matInput placeholder=\\\"Telephone\\\" formControlName=\\\"phone\\\">\\n      <mat-icon matSuffix>mode_edit</mat-icon>\\n    </mat-form-field>\\n    <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"userForm.invalid\\\">S'enregistrer</button>\\n  </form> <!-- the submit is impossible while the form is invalid, while the validators are not passed -->\\n</mat-card>\\n\\n\"","module.exports = \"/* CSS for the register component */\\nh2 {\\n  text-align: center; }\\nmat-card {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n  margin: 0 auto;\\n  margin-top: 10%;\\n  margin-bottom: 10%; }\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 90%; }\\n.example-full-width {\\n  width: 100%; }\\ntd {\\n  padding-right: 8px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvQzpcXFVzZXJzXFxNYXR0aGV3XFxEZXNrdG9wXFxQcm9qZXRfV0VCL3NyY1xcYXBwXFxyZWdpc3RlclxccmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsbUNBQUE7QUFFQTtFQUNFLGtCQUFrQixFQUFBO0FBR3BCO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixXQUFZO0VBQ1osY0FBYztFQUNkLGVBQWU7RUFDZixrQkFBa0IsRUFBQTtBQUdwQjtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsVUFBVyxFQUFBO0FBR2I7RUFDRSxXQUFXLEVBQUE7QUFHYjtFQUNFLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDU1MgZm9yIHRoZSByZWdpc3RlciBjb21wb25lbnQgKi9cclxuXHJcbmgyIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbm1hdC1jYXJkIHtcclxuICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gIG1heC13aWR0aDogNTAwcHg7XHJcbiAgd2lkdGg6IDEwMCUgO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIG1hcmdpbi10b3A6IDEwJTtcclxuICBtYXJnaW4tYm90dG9tOiAxMCU7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZvcm0ge1xyXG4gIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICB3aWR0aDogOTAlIDtcclxufVxyXG5cclxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbnRke1xyXG4gIHBhZGRpbmctcmlnaHQ6IDhweDtcclxufVxyXG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {Validators, FormGroup, FormBuilder} from '@angular/forms';\n\nimport {Router} from '@angular/router';\nimport {AuthentificationService, TokenPayload} from '../../authentification.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  userForm: FormGroup;\n\n// We define credentials to ensure to not have a conflict of data type with the authentification service\n  credentials: TokenPayload = {\n    id: 0,\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    phone: '',\n    city: '',\n    address: '',\n    code: '',\n  };\n\n\n  constructor(private formBuilder: FormBuilder,\n              private auth: AuthentificationService,\n              private router: Router) {}\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  // We Init the form with the validators\n  initForm() {\n    this.userForm = this.formBuilder.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      cpassword: ['', Validators.required],\n      phone: ['', Validators.required],\n      city: ['', Validators.required],\n      address: ['', Validators.required],\n      code: ['', Validators.required]\n\n    });\n  }\n\n  // We store the results of the form and we send them to the server. If the email is not already taken\n  // we redirect the user and if not we alert the user\n  onSubmitForm() {\n    const formValue = this.userForm.value;\n\n    if (formValue.password != formValue.cpassword) {\n      alert('Passwords do not match');\n      return;\n    }\n\n    this.credentials.firstname = formValue.firstname;\n    this.credentials.lastname = formValue.lastname;\n    this.credentials.email = formValue.email;\n    this.credentials.password = formValue.password;\n    this.credentials.phone = formValue.phone;\n    this.credentials.city = formValue.city;\n    this.credentials.address = formValue.address;\n    this.credentials.code = formValue.code;\n\n\n    this.auth.register(this.credentials).subscribe(\n      (data) => {\n        console.log(data);\n        if (data.error == 'User already exists') {\n          alert('User already exist');\n        } else {\n          this.router.navigate(['profile']);\n        }\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n}\n","module.exports = \"<!-- HTML For the service list, we display all of the infos for each services using the directive ngFor -->\\n<div class=\\\"search\\\">\\n  <mat-form-field appearance=\\\"outline\\\" color=\\\"accent\\\" >\\n    <mat-label>Trouver un service</mat-label>\\n    <input matInput placeholder=\\\"...\\\" type=\\\"text\\\" #myInput [(ngModel)]=\\\"name\\\" (input)=\\\"Search()\\\" >\\n    <mat-icon matSuffix>search</mat-icon>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"content\\\">\\n  <div class=\\\"container\\\"*ngFor=\\\"let service of this.MyServices\\\">\\n    <div class=\\\"service\\\" >\\n      <mat-card>\\n        <div class=\\\"top\\\">\\n          <h2>{{service.name}}</h2>\\n          <h4>{{service.idType}}</h4>\\n        </div>\\n        <div class=\\\"img-container\\\">\\n          <img id=\\\"img1\\\" [src]=\\\"service.image\\\">\\n          <div class=\\\"middle\\\" *ngIf=\\\"isAdmin()\\\">\\n            <div class=\\\"buttons\\\">\\n              <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/services-modify',service.name]\\\">Modifier</button>\\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onDelete(service.name, service.image)\\\">Supprimer</button>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"bottom\\\">\\n          <div class=\\\"bottom-container\\\">\\n            <p>{{service.price}} €</p>\\n            <p>{{service.desc}}</p>\\n          </div>\\n          <div class=\\\"bottom-button\\\">\\n            <button id=\\\"buttonS\\\" mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"isLoading\\\" (click)=\\\"OrderOne(service.name)\\\">Commander</button>\\n          </div>\\n        </div>\\n      </mat-card>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","module.exports = \"/* CSS for services-list */\\n#img1 {\\n  width: 100%;\\n  height: 100%;\\n  text-align: center;\\n  display: block; }\\n.search {\\n  margin-top: 20px;\\n  width: 100%;\\n  height: 10%;\\n  text-align: center;\\n  display: block; }\\n.search .mat-form-field {\\n    padding-top: 10px;\\n    padding-bottom: 10px; }\\n.content {\\n  width: 100%;\\n  height: 90%;\\n  text-align: center;\\n  display: block; }\\n.content .container {\\n    min-width: 75px;\\n    max-width: 250px;\\n    width: 100%;\\n    height: 485px;\\n    margin: 0 auto;\\n    margin-top: 50px;\\n    text-align: center;\\n    display: inline-block;\\n    margin-left: 30px;\\n    margin-right: 30px; }\\n.content .container .service {\\n      width: 100%;\\n      float: left;\\n      text-align: center;\\n      display: block;\\n      box-shadow: 0 0 25px rgba(0, 0, 0, 0.2); }\\n.content .container .service .mat-card {\\n        height: 485px; }\\n.content .container .service .mat-card .top {\\n          height: 20%;\\n          display: inline-block;\\n          vertical-align: top; }\\n.content .container .service .mat-card .img-container {\\n          height: 50%;\\n          display: inline-block;\\n          vertical-align: middle; }\\n.content .container .service .mat-card .img-container .img {\\n            margin: 0 auto;\\n            display: inline-block;\\n            vertical-align: middle; }\\n.content .container .service .mat-card .bottom {\\n          height: 30%;\\n          display: inline-block;\\n          vertical-align: bottom; }\\n.content .container .service .mat-card .bottom .bottom-container {\\n            height: 66%;\\n            display: inline-block;\\n            vertical-align: bottom; }\\n.content .container .service .mat-card .bottom .bottom-container .p {\\n              padding: 5px;\\n              display: inline-block;\\n              vertical-align: bottom; }\\n.content .container .service .mat-card .bottom .bottom-button {\\n            height: 33%;\\n            display: inline-block;\\n            vertical-align: bottom; }\\n#buttonS {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  margin: 16px; }\\n.middle {\\n  transition: .5s ease;\\n  opacity: 0;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  -ms-transform: translate(-50%, -50%);\\n  text-align: center; }\\n.img-container:hover .img {\\n  opacity: 0.3; }\\n.img-container:hover .middle {\\n  opacity: 1; }\\n.buttons {\\n  padding: 16px 32px; }\\n.buttons .mat-raised-button {\\n    margin: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmljZXMtbGlzdC9DOlxcVXNlcnNcXE1hdHRoZXdcXERlc2t0b3BcXFByb2pldF9XRUIvc3JjXFxhcHBcXHNlcnZpY2VzLWxpc3RcXHNlcnZpY2VzLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMEJBQUE7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGNBQWMsRUFBQTtBQUdoQjtFQUNFLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixjQUFjLEVBQUE7QUFMaEI7SUFPSSxpQkFBaUI7SUFDakIsb0JBQW9CLEVBQUE7QUFHeEI7RUFDRSxXQUFXO0VBQ1gsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixjQUFjLEVBQUE7QUFKaEI7SUFPSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxhQUFhO0lBQ2IsY0FBYztJQUNkLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLGlCQUFpQjtJQUNqQixrQkFBa0IsRUFBQTtBQWhCdEI7TUFtQk0sV0FBVztNQUNYLFdBQVc7TUFDWCxrQkFBa0I7TUFDbEIsY0FBYztNQUNkLHVDQUE4QixFQUFBO0FBdkJwQztRQTBCUSxhQUFhLEVBQUE7QUExQnJCO1VBNkJVLFdBQVc7VUFDWCxxQkFBcUI7VUFDckIsbUJBQW1CLEVBQUE7QUEvQjdCO1VBbUNVLFdBQVc7VUFDWCxxQkFBcUI7VUFDckIsc0JBQXNCLEVBQUE7QUFyQ2hDO1lBd0NZLGNBQWM7WUFDZCxxQkFBcUI7WUFDckIsc0JBQXNCLEVBQUE7QUExQ2xDO1VBK0NVLFdBQVc7VUFDWCxxQkFBcUI7VUFDckIsc0JBQXNCLEVBQUE7QUFqRGhDO1lBbURZLFdBQVc7WUFDWCxxQkFBcUI7WUFDckIsc0JBQXNCLEVBQUE7QUFyRGxDO2NBd0RjLFlBQVk7Y0FDWixxQkFBcUI7Y0FDckIsc0JBQXNCLEVBQUE7QUExRHBDO1lBOERZLFdBQVc7WUFDWCxxQkFBcUI7WUFDckIsc0JBQXNCLEVBQUE7QUFTbEM7RUFDRSxxQkFBcUI7RUFDckIsc0JBQXNCO0VBQ3RCLFlBQVksRUFBQTtBQUdkO0VBQ0Usb0JBQW9CO0VBQ3BCLFVBQVU7RUFDVixrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVM7RUFDVCx3Q0FBK0I7VUFBL0IsZ0NBQStCO0VBQy9CLG9DQUFtQztFQUNuQyxrQkFBa0IsRUFBQTtBQUdwQjtFQUNFLFlBQVksRUFBQTtBQUdkO0VBQ0UsVUFBVSxFQUFBO0FBSVo7RUFDRSxrQkFBa0IsRUFBQTtBQURwQjtJQUdJLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NlcnZpY2VzLWxpc3Qvc2VydmljZXMtbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIENTUyBmb3Igc2VydmljZXMtbGlzdCAqL1xyXG5cclxuI2ltZzF7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLnNlYXJjaHtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICAubWF0LWZvcm0tZmllbGR7XHJcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4gIH1cclxufVxyXG4uY29udGVudCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA5MCU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG5cclxuICAuY29udGFpbmVyIHtcclxuICAgIG1pbi13aWR0aDogNzVweDtcclxuICAgIG1heC13aWR0aDogMjUwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogNDg1cHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcclxuICAgIG1hcmdpbi1yaWdodDogMzBweDtcclxuXHJcbiAgICAuc2VydmljZSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgYm94LXNoYWRvdzogMCAwIDI1cHggcmdiYSgjMDAwLCAwLjIpO1xyXG5cclxuICAgICAgLm1hdC1jYXJkIHtcclxuICAgICAgICBoZWlnaHQ6IDQ4NXB4O1xyXG5cclxuICAgICAgICAudG9wIHtcclxuICAgICAgICAgIGhlaWdodDogMjAlO1xyXG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5pbWctY29udGFpbmVyIHtcclxuICAgICAgICAgIGhlaWdodDogNTAlO1xyXG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuXHJcbiAgICAgICAgICAuaW1nIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5ib3R0b20ge1xyXG4gICAgICAgICAgaGVpZ2h0OiAzMCU7XHJcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgICAgICAgLmJvdHRvbS1jb250YWluZXJ7XHJcbiAgICAgICAgICAgIGhlaWdodDogNjYlO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XHJcblxyXG4gICAgICAgICAgICAucCB7XHJcbiAgICAgICAgICAgICAgcGFkZGluZzogNXB4O1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAuYm90dG9tLWJ1dHRvbntcclxuICAgICAgICAgICAgaGVpZ2h0OiAzMyU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcblxyXG4jYnV0dG9uUyB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207XHJcbiAgbWFyZ2luOiAxNnB4O1xyXG59XHJcblxyXG4ubWlkZGxlIHtcclxuICB0cmFuc2l0aW9uOiAuNXMgZWFzZTtcclxuICBvcGFjaXR5OiAwO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA1MCU7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcclxuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5pbWctY29udGFpbmVyOmhvdmVyIC5pbWcge1xyXG4gIG9wYWNpdHk6IDAuMztcclxufVxyXG5cclxuLmltZy1jb250YWluZXI6aG92ZXIgLm1pZGRsZSB7XHJcbiAgb3BhY2l0eTogMTtcclxufVxyXG5cclxuXHJcbi5idXR0b25zIHtcclxuICBwYWRkaW5nOiAxNnB4IDMycHg7XHJcbiAgLm1hdC1yYWlzZWQtYnV0dG9uIHtcclxuICAgIG1hcmdpbjogMjBweDtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {ServicesService} from '../../services.service';\nimport {AuthentificationService} from '../../authentification.service';\nimport {OrderService} from '../../order.service';\nimport {MatSnackBar} from '@angular/material';\nimport {Router} from '@angular/router';\n\n\nexport interface ServiceDetails {\n  name: string;\n  idType: string;\n  price: number;\n  desc: string;\n  image: string;\n}\n\nexport interface Services {\n  name: string;\n  idType: string;\n  libelle: string;\n  price: number;\n  desc: string;\n  image: string;\n}\n\nexport interface IdType {\n  idType: string;\n}\n\n\n\n@Component({\n  selector: 'app-services-list',\n  templateUrl: './services-list.component.html',\n  styleUrls: ['./services-list.component.scss']\n})\nexport class ServicesListComponent implements OnInit {\n\n  MyServices: ServiceDetails[];\n  MyServicesStored: ServiceDetails[];\n  name: string;\n\n  isLoading = false;\n  private idType: IdType;\n\n  constructor(private services: ServicesService,\n              private auth: AuthentificationService,\n              private order: OrderService,\n              private snackBar: MatSnackBar,\n              private router: Router) { }\n\n  // We init this page by getting all the services en then we will deplay them\n  ngOnInit() {\n    this.services.getServices().subscribe(\n      service => {\n        this.MyServices = service;\n        this.MyServicesStored = service;\n        for (let i = 0; i < this.MyServices.length; i++) {\n           this.GetLibelle(this.MyServices[i].idType, i);\n           this.GetLibelle(this.MyServicesStored[i].idType, i);\n        }\n      },\n      err => {\n        console.error((err));\n      }\n    );\n  }\n\n  onDelete(name, image) {\n    this.services.delete(name, image).subscribe(\n      () => {\n        this.ngOnInit()\n      }\n    )\n  }\n\n  isAdmin(){\n    return this.auth.isLoggedIn() && this.auth.isAdmin()\n  }\n\n  // We get the libelle of a service type with his id\n  GetLibelle(type: string, i) {\n        this.services.LibelleOfServices(type).subscribe(data => {\n          this.MyServices[i].idType = data.libelle.toString();\n          this.MyServicesStored[i].idType = data.libelle.toString();\n    });\n  }\n\n  Search(){\n    if(this.name != \"\"){\n      this.MyServices = this.MyServices.filter(res => {\n        return res.name.toLocaleLowerCase().match(this.name.toLocaleLowerCase())\n      })\n    }\n    else if(this.name === \"\"){\n      this.MyServices = this.MyServicesStored\n    }\n  }\n\n  // We create an order for the user which order the service\n  OrderOne(name) {\n    this.isLoading = true;\n    if(this.auth.isLoggedIn()){\n      this.auth.profile().subscribe(\n        user => {\n          this.order.OrderOne(name, user.id).subscribe(data => {\n            this.isLoading = false;\n            console.log(data)\n            if(!data.error){\n              this.snackBar.open('Votre demande de service a bien été prise en considération', '!', {\n                duration: 2000,\n              });\n              // We refresh the router-outlet to actualise the count of pending orders in the navbar\n              this.router.navigate(['cart']);\n              this.router.navigate(['']);\n            } else {\n              this.snackBar.open('Vous ne pouvez pas commander plusieurs fois le même service', '!', {\n                duration: 2000,\n              });\n            }\n          })\n        },\n        err => {\n          console.error((err));\n        }\n      );\n    } else {\n      alert('Il faut s\\'identifier pour passer commande')\n    }\n  }\n}\n","module.exports = \"<!-- We use two way data binding to display the preview of the form while the user is entering the data -->\\n\\n<!-- Form side -->\\n<div class=\\\"container\\\">\\n  <div class=\\\"form\\\">\\n    <mat-card>\\n      <h1>Form</h1>\\n      <form [formGroup]=\\\"serviceForm\\\" (ngSubmit)=\\\"onSubmitForm()\\\">\\n        <button mat-icon-button type=\\\"submit\\\" (click)=\\\"openDialog()\\\"> <!-- Open the dialog page for the download of a file -->\\n          <mat-icon color=\\\"accent\\\">cloud_upload</mat-icon>\\n        </button>\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Nom du service</mat-label>\\n          <input matInput placeholder=\\\"Enter service name\\\" formControlName=\\\"name\\\" >\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-label>Type de service</mat-label>\\n          <mat-select formControlName=\\\"type\\\">\\n            <mat-option>-- None --</mat-option>\\n            <mat-optgroup *ngFor=\\\"let group of TypesGroups\\\" [label]=\\\"group.name\\\"\\n                          [disabled]=\\\"group.disabled\\\">\\n              <mat-option *ngFor=\\\"let type of group.type\\\" [value]=\\\"type\\\">\\n                {{type.libelle}}\\n              </mat-option>\\n            </mat-optgroup>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-slider [max]=\\\"50\\\" [min]=\\\"0\\\" [step]=\\\"0.5\\\" [thumbLabel]=\\\"true\\\" formControlName=\\\"price\\\" ></mat-slider>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <textarea matInput #message maxlength=\\\"42\\\" placeholder=\\\"Description\\\" formControlName=\\\"desc\\\" ></textarea>\\n          <mat-hint align=\\\"start\\\"><strong>Description du service</strong> </mat-hint>\\n          <mat-hint align=\\\"end\\\">{{message.value.length}} / 42</mat-hint>\\n        </mat-form-field>\\n        <button id=\\\"button1\\\" mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"serviceForm.invalid\\\">Valider</button>\\n      </form>\\n    </mat-card>\\n  </div>\\n\\n  <!-- Preview side -->\\n  <div class=\\\"preview\\\">\\n    <mat-card>\\n      <h1>Preview</h1>\\n\\n      <h2>{{serviceForm.value['name']}}</h2>\\n      <h4>{{serviceForm.value['type'].libelle}}</h4>\\n      <img id=\\\"img1\\\" [src]=\\\"infos.image\\\">\\n      <h4>{{serviceForm.value['price']}} €</h4>\\n      <p>{{serviceForm.value['desc']}}</p>\\n    </mat-card>\\n  </div>\\n</div>\\n\\n\"","module.exports = \"/* CSS for services component */\\n#button1 {\\n  margin-top: 30px;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); }\\n#img1 {\\n  width: 90%;\\n  text-align: center;\\n  display: block; }\\nimg {\\n  margin: 0 auto;\\n  display: block; }\\n.container {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n  height: 485px;\\n  margin: 0 auto;\\n  margin-top: 50px;\\n  text-align: center; }\\n.container .form {\\n    width: 50%;\\n    float: left;\\n    text-align: center;\\n    display: block;\\n    box-shadow: 0 0 25px rgba(0, 0, 0, 0.2); }\\n.container .form .button {\\n      margin-top: 50px; }\\n.container .form .mat-icon {\\n      font-size: 64px;\\n      margin: 0 auto;\\n      height: 64px;\\n      width: 64px;\\n      margin-bottom: 30px; }\\n.container .form .mat-icon:hover {\\n        opacity: 0.8; }\\n.container .form .textarea {\\n      margin-top: 30px; }\\n.container .form .mat-slider {\\n      width: 90%; }\\n.container .preview {\\n    width: 50%;\\n    float: left;\\n    text-align: center;\\n    display: block;\\n    box-shadow: 0 0 25px rgba(0, 0, 0, 0.2); }\\n.container .preview .h1 {\\n      padding-top: 5px; }\\n.container .preview .h1 .h2 {\\n        padding-top: 5px; }\\nmat-icon {\\n  font-size: 64px;\\n  margin: 0 auto;\\n  height: 64px;\\n  width: 64px; }\\nmat-icon:hover {\\n    opacity: 0.8; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmljZXMtbW9kaWZ5L0M6XFxVc2Vyc1xcTWF0dGhld1xcRGVza3RvcFxcUHJvamV0X1dFQi9zcmNcXGFwcFxcc2VydmljZXMtbW9kaWZ5XFxzZXJ2aWNlcy1tb2RpZnkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0JBQUE7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQix1Q0FBOEIsRUFBQTtBQUVoQztFQUNFLFVBQVU7RUFDVixrQkFBa0I7RUFDbEIsY0FBYyxFQUFBO0FBR2hCO0VBQ0UsY0FBYztFQUNkLGNBQWMsRUFBQTtBQUdoQjtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsV0FBWTtFQUNaLGFBQWE7RUFDYixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLGtCQUFrQixFQUFBO0FBUHBCO0lBVUksVUFBVTtJQUNWLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLHVDQUE4QixFQUFBO0FBZGxDO01BZ0JNLGdCQUFlLEVBQUE7QUFoQnJCO01BbUJNLGVBQWU7TUFDZixjQUFjO01BQ2QsWUFBWTtNQUNaLFdBQVc7TUFDWCxtQkFBbUIsRUFBQTtBQXZCekI7UUF5QlEsWUFBWSxFQUFBO0FBekJwQjtNQTZCTSxnQkFBZ0IsRUFBQTtBQTdCdEI7TUFnQ00sVUFBVSxFQUFBO0FBaENoQjtJQW9DSSxVQUFVO0lBQ1YsV0FBVztJQUNYLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsdUNBQThCLEVBQUE7QUF4Q2xDO01BMENNLGdCQUFnQixFQUFBO0FBMUN0QjtRQTRDUSxnQkFBZ0IsRUFBQTtBQU14QjtFQUNFLGVBQWU7RUFDZixjQUFjO0VBQ2QsWUFBWTtFQUNaLFdBQVcsRUFBQTtBQUpiO0lBTUksWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2VydmljZXMtbW9kaWZ5L3NlcnZpY2VzLW1vZGlmeS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIENTUyBmb3Igc2VydmljZXMgY29tcG9uZW50ICovXHJcbiNidXR0b24xe1xyXG4gIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgjMDAwLCAwLjIpO1xyXG59XHJcbiNpbWcxe1xyXG4gIHdpZHRoOiA5MCU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG5pbWd7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICB3aWR0aDogMTAwJSA7XHJcbiAgaGVpZ2h0OiA0ODVweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgLmZvcm0ge1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMjVweCByZ2JhKCMwMDAsIDAuMik7XHJcbiAgICAuYnV0dG9ue1xyXG4gICAgICBtYXJnaW4tdG9wOjUwcHg7XHJcbiAgICB9XHJcbiAgICAubWF0LWljb257XHJcbiAgICAgIGZvbnQtc2l6ZTogNjRweDtcclxuICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgIGhlaWdodDogNjRweDtcclxuICAgICAgd2lkdGg6IDY0cHg7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgb3BhY2l0eTogMC44O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAudGV4dGFyZWF7XHJcbiAgICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICB9XHJcbiAgICAubWF0LXNsaWRlcntcclxuICAgICAgd2lkdGg6IDkwJTtcclxuICAgIH1cclxuICB9XHJcbiAgLnByZXZpZXcge1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMjVweCByZ2JhKCMwMDAsIDAuMik7XHJcbiAgICAuaDF7XHJcbiAgICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgICAgIC5oMntcclxuICAgICAgICBwYWRkaW5nLXRvcDogNXB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5tYXQtaWNvbntcclxuICBmb250LXNpemU6IDY0cHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgaGVpZ2h0OiA2NHB4O1xyXG4gIHdpZHRoOiA2NHB4O1xyXG4gICY6aG92ZXJ7XHJcbiAgICBvcGFjaXR5OiAwLjg7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {ServicesService} from '../../services.service';\nimport {switchMap} from 'rxjs/operators';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {TypeGroup, UploadServiceComponent} from '../services/services.component';\nimport {MatDialog} from '@angular/material';\n\n\nexport interface Type {\n  libelle: string;\n  idType: number;\n}\n\nexport interface TypeGroup {\n  disabled?: boolean;\n  name: string;\n  type: Type[];\n}\n\n// We use that interface to dialog with the upload component\nexport interface DialogData {\n  file: string;\n}\n\n@Component({\n  selector: 'app-services-modify',\n  templateUrl: './services-modify.component.html',\n  styleUrls: ['./services-modify.component.scss']\n})\nexport class ServicesModifyComponent implements OnInit {\n\n  TypesGroups: TypeGroup[] = [];\n\n  // We store the infos of the service that we will create\n  infos = {\n    name: '',\n    type: '',\n    desc: '',\n    price: 0,\n    image: 'assets/images/service.jpg', // We define a default image for a service\n  };\n\n  idService\n  OldImage\n\n  serviceForm: FormGroup;\n  fileUrl: string;\n  SubmitBlocked = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private services: ServicesService,\n    public dialog: MatDialog,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.initForm();\n\n    this.services.getTypes().subscribe(\n      service => {\n        const add = {\n          name : 'Ménager',\n          type : service\n        };\n        console.log(add);\n        this.TypesGroups.push(add);\n      },\n      err => {\n        console.error((err));\n      }\n    );\n\n    const id = this.route.snapshot.paramMap.get('id');\n\n    this.services.getAservice(id).subscribe(service => {\n        this.infos.image = service.image\n        this.OldImage = service.image\n        console.log(service)\n        this.idService = service.idService\n\n        this.serviceForm.patchValue({\n          name: service.name,\n          type: {libelle: service.libelle,\n            idType: service.idType},\n          desc: service.desc,\n          price: service.price\n        })\n    })\n\n  }\n\n  // we verify that all the infos of the form are entered\n  initForm() {\n    this.serviceForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      type: ['', Validators.required],\n      desc: ['', Validators.required],\n      price: ['', Validators.required]\n    });\n  }\n\n  // We collect the info of the service and then we submit them to the server and then we navigate the admin to the service list\n  onSubmitForm() {\n\n    const formValue = this.serviceForm.value;\n    this.infos.name = formValue.name;\n    this.infos.type = formValue.type.idType;\n    this.infos.desc = formValue.desc;\n    this.infos.price = formValue.price;\n    if (this.fileUrl && this.fileUrl !== '') {\n      this.infos.image = this.fileUrl;\n      console.log('test');\n    }\n    if(this.OldImage === this.infos.image){\n      this.OldImage = 'assets/images/service.jpg'\n    }\n    if (!this.SubmitBlocked) {\n      this.services.modifyService(this.OldImage,this.infos, this.idService).then((res) => {\n        this.router.navigate(['']);\n      });\n    }\n\n  }\n\n  // If the admin click on the upload button if open a dialog page in which he will be able to download an image for the order\n  openDialog(): void {\n    this.SubmitBlocked = true;\n    const dialogRef = this.dialog.open(UploadServiceComponent, {\n      width: '250px',\n      data: {file: this.fileUrl}\n    });\n\n  // we store the image url which was upload by the admin\n  dialogRef.afterClosed().subscribe(result => {\n    this.SubmitBlocked = false;\n    console.log('The dialog was closed');\n    if (result) {\n      this.infos.image = result;\n    }\n  });\n  }\n\n\n}\n","module.exports = \"<!-- We use two way data binding to display the preview of the form while the user is entering the data -->\\n\\n<!-- Form side -->\\n<div class=\\\"container\\\">\\n  <div class=\\\"form\\\">\\n    <mat-card>\\n      <h1>Form</h1>\\n      <form [formGroup]=\\\"serviceForm\\\" (ngSubmit)=\\\"onSubmitForm()\\\">\\n        <button mat-icon-button type=\\\"submit\\\" (click)=\\\"openDialog()\\\"> <!-- Open the dialog page for the download of a file -->\\n          <mat-icon color=\\\"accent\\\">cloud_upload</mat-icon>\\n        </button>\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Nom du service</mat-label>\\n          <input matInput placeholder=\\\"Enter service name\\\" formControlName=\\\"name\\\">\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-label>Type de service</mat-label>\\n          <mat-select formControlName=\\\"type\\\">\\n            <mat-option>-- None --</mat-option>\\n            <mat-optgroup *ngFor=\\\"let group of TypesGroups\\\" [label]=\\\"group.name\\\"\\n                          [disabled]=\\\"group.disabled\\\">\\n              <mat-option *ngFor=\\\"let type of group.type\\\" [value]=\\\"type\\\">\\n                {{type.libelle}}\\n              </mat-option>\\n            </mat-optgroup>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-slider [max]=\\\"50\\\" [min]=\\\"0\\\" [step]=\\\"0.5\\\" [thumbLabel]=\\\"true\\\" formControlName=\\\"price\\\"></mat-slider>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <textarea matInput #message maxlength=\\\"42\\\" placeholder=\\\"Description\\\" formControlName=\\\"desc\\\"></textarea>\\n          <mat-hint align=\\\"start\\\"><strong>Description du service</strong> </mat-hint>\\n          <mat-hint align=\\\"end\\\">{{message.value.length}} / 42</mat-hint>\\n        </mat-form-field>\\n        <button id=\\\"button1\\\" mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"serviceForm.invalid\\\">Valider</button>\\n      </form>\\n    </mat-card>\\n  </div>\\n\\n  <!-- Preview side -->\\n  <div class=\\\"preview\\\">\\n    <mat-card>\\n      <h1>Preview</h1>\\n\\n      <h2>{{serviceForm.value['name']}}</h2>\\n      <h4>{{serviceForm.value['type'].libelle}}</h4>\\n      <img id=\\\"img1\\\" [src]=\\\"infos.image\\\">\\n      <h4>{{serviceForm.value['price']}} €</h4>\\n      <p>{{serviceForm.value['desc']}}</p>\\n    </mat-card>\\n  </div>\\n</div>\\n\\n\"","module.exports = \"/* CSS for services component */\\n#button1 {\\n  margin-top: 30px;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); }\\n#img1 {\\n  width: 90%;\\n  text-align: center;\\n  display: block; }\\nimg {\\n  margin: 0 auto;\\n  display: block; }\\n.container {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n  height: 485px;\\n  margin: 0 auto;\\n  margin-top: 50px;\\n  text-align: center; }\\n.container .form {\\n    width: 50%;\\n    float: left;\\n    text-align: center;\\n    display: block;\\n    box-shadow: 0 0 25px rgba(0, 0, 0, 0.2); }\\n.container .form .button {\\n      margin-top: 50px; }\\n.container .form .mat-icon {\\n      font-size: 64px;\\n      margin: 0 auto;\\n      height: 64px;\\n      width: 64px;\\n      margin-bottom: 30px; }\\n.container .form .mat-icon:hover {\\n        opacity: 0.8; }\\n.container .form .textarea {\\n      margin-top: 30px; }\\n.container .form .mat-slider {\\n      width: 90%; }\\n.container .preview {\\n    width: 50%;\\n    float: left;\\n    text-align: center;\\n    display: block;\\n    box-shadow: 0 0 25px rgba(0, 0, 0, 0.2); }\\n.container .preview .h1 {\\n      padding-top: 5px; }\\n.container .preview .h1 .h2 {\\n        padding-top: 5px; }\\nmat-icon {\\n  font-size: 64px;\\n  margin: 0 auto;\\n  height: 64px;\\n  width: 64px; }\\nmat-icon:hover {\\n    opacity: 0.8; }\\n.order-dialog {\\n  text-align: center;\\n  width: 100%;\\n  height: 100%;\\n  margin: 0 auto; }\\n.order-dialog .mat-dialog {\\n    text-align: center;\\n    margin: 0 auto; }\\n.center {\\n  padding-top: 8px;\\n  text-align: center;\\n  margin: 0 auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmljZXMvQzpcXFVzZXJzXFxNYXR0aGV3XFxEZXNrdG9wXFxQcm9qZXRfV0VCL3NyY1xcYXBwXFxzZXJ2aWNlc1xcc2VydmljZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0JBQUE7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQix1Q0FBOEIsRUFBQTtBQUVoQztFQUNFLFVBQVU7RUFDVixrQkFBa0I7RUFDbEIsY0FBYyxFQUFBO0FBR2hCO0VBQ0UsY0FBYztFQUNkLGNBQWMsRUFBQTtBQUdoQjtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsV0FBWTtFQUNaLGFBQWE7RUFDYixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLGtCQUFrQixFQUFBO0FBUHBCO0lBVUksVUFBVTtJQUNWLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLHVDQUE4QixFQUFBO0FBZGxDO01BZ0JNLGdCQUFlLEVBQUE7QUFoQnJCO01BbUJNLGVBQWU7TUFDZixjQUFjO01BQ2QsWUFBWTtNQUNaLFdBQVc7TUFDWCxtQkFBbUIsRUFBQTtBQXZCekI7UUF5QlEsWUFBWSxFQUFBO0FBekJwQjtNQTZCTSxnQkFBZ0IsRUFBQTtBQTdCdEI7TUFnQ00sVUFBVSxFQUFBO0FBaENoQjtJQW9DSSxVQUFVO0lBQ1YsV0FBVztJQUNYLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsdUNBQThCLEVBQUE7QUF4Q2xDO01BMENNLGdCQUFnQixFQUFBO0FBMUN0QjtRQTRDUSxnQkFBZ0IsRUFBQTtBQU14QjtFQUNFLGVBQWU7RUFDZixjQUFjO0VBQ2QsWUFBWTtFQUNaLFdBQVcsRUFBQTtBQUpiO0lBTUksWUFBWSxFQUFBO0FBSWhCO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0VBQ1osY0FBYyxFQUFBO0FBSmhCO0lBTUksa0JBQWtCO0lBQ2xCLGNBQWMsRUFBQTtBQUdsQjtFQUNFLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2VydmljZXMvc2VydmljZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDU1MgZm9yIHNlcnZpY2VzIGNvbXBvbmVudCAqL1xyXG4jYnV0dG9uMXtcclxuICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoIzAwMCwgMC4yKTtcclxufVxyXG4jaW1nMXtcclxuICB3aWR0aDogOTAlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuaW1ne1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uY29udGFpbmVyIHtcclxuICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gIG1heC13aWR0aDogNTAwcHg7XHJcbiAgd2lkdGg6IDEwMCUgO1xyXG4gIGhlaWdodDogNDg1cHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgbWFyZ2luLXRvcDogNTBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gIC5mb3JtIHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDI1cHggcmdiYSgjMDAwLCAwLjIpO1xyXG4gICAgLmJ1dHRvbntcclxuICAgICAgbWFyZ2luLXRvcDo1MHB4O1xyXG4gICAgfVxyXG4gICAgLm1hdC1pY29ue1xyXG4gICAgICBmb250LXNpemU6IDY0cHg7XHJcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICBoZWlnaHQ6IDY0cHg7XHJcbiAgICAgIHdpZHRoOiA2NHB4O1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gICAgICAmOmhvdmVye1xyXG4gICAgICAgIG9wYWNpdHk6IDAuODtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnRleHRhcmVhe1xyXG4gICAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgfVxyXG4gICAgLm1hdC1zbGlkZXJ7XHJcbiAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC5wcmV2aWV3IHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDI1cHggcmdiYSgjMDAwLCAwLjIpO1xyXG4gICAgLmgxe1xyXG4gICAgICBwYWRkaW5nLXRvcDogNXB4O1xyXG4gICAgICAuaDJ7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDVweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxubWF0LWljb257XHJcbiAgZm9udC1zaXplOiA2NHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIGhlaWdodDogNjRweDtcclxuICB3aWR0aDogNjRweDtcclxuICAmOmhvdmVye1xyXG4gICAgb3BhY2l0eTogMC44O1xyXG4gIH1cclxufVxyXG5cclxuLm9yZGVyLWRpYWxvZ3tcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIC5tYXQtZGlhbG9ne1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgfVxyXG59XHJcbi5jZW50ZXJ7XHJcbiAgcGFkZGluZy10b3A6IDhweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuIl19 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport {Router} from '@angular/router';\nimport {ServicesService} from '../../services.service';\n\n// We use those two interface to store the type of the services\nexport interface Type {\n  libelle: string;\n  idType: number;\n}\n\nexport interface TypeGroup {\n  disabled?: boolean;\n  name: string;\n  type: Type[];\n}\n\n// We use that interface to dialog with the upload component\nexport interface DialogData {\n  file: string;\n}\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.scss']\n})\nexport class ServicesComponent implements OnInit {\n\n  TypesGroups: TypeGroup[] = [];\n\n  // We store the infos of the service that we will create\n  infos = {\n    name: '',\n    type: '',\n    desc: '',\n    price: 0,\n    image: 'assets/images/service.jpg', // We definie a default image for a service\n  };\n\n\n  serviceForm: FormGroup;\n  fileUrl: string;\n\n  constructor(public dialog: MatDialog,\n              private formBuilder: FormBuilder,\n              private services: ServicesService,\n              private router: Router) {}\n\n\n  // We get all or types from the server side to permit the admin to choose a type while creating the new service\n  ngOnInit(): void {\n    this.initForm();\n\n    this.services.getTypes().subscribe(\n      service => {\n        const add = {\n          name : 'Ménager',\n          type : service\n        };\n        console.log(add);\n        this.TypesGroups.push(add);\n      },\n      err => {\n        console.error((err));\n      }\n    );\n  }\n\n  // we verify that all the infos of the form are entered\n  initForm() {\n    this.serviceForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      type: ['', Validators.required],\n      desc: ['', Validators.required],\n      price: ['', Validators.required]\n    });\n  }\n\n // We collect the info of the service and then we submit them to the server and then we navigate the admin to the service list\n  onSubmitForm() {\n\n    const formValue = this.serviceForm.value;\n    this.infos.name = formValue.name;\n    this.infos.type = formValue.type.idType;\n    this.infos.desc = formValue.desc;\n    this.infos.price = formValue.price;\n    if (this.fileUrl && this.fileUrl !== '') {\n      this.infos.image = this.fileUrl;\n    }\n\n    if (this.infos.name && this.infos.type && this.infos.desc && this.infos.type) {\n      this.services.addService2(this.infos).then((res) => {\n        this.router.navigate(['']);\n      });\n    }\n\n  }\n\n  // If the admin click on the upload button if open a dialog page in which he will be able to download an image for the order\n  openDialog(): void {\n    const dialogRef = this.dialog.open(UploadServiceComponent, {\n      width: '250px',\n      data: {file: this.fileUrl}\n    });\n\n    // we store the image url which was upload by the admin\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result) {\n        this.infos.image = result;\n      }\n    });\n  }\n\n\n}\n\n\n// We create an other component in which we will display the window which will permit the admin to upload an image for the service\n@Component({\n  selector: 'app-upload-service',\n  templateUrl: 'upload-service.html',\n  styleUrls: ['./services.component.scss']\n})\nexport class UploadServiceComponent {\n\n  constructor(public dialogRef: MatDialogRef<UploadServiceComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private services: ServicesService) {}\n\n  fileIsUploading = false;\n  fileUrl: string;\n  fileUploaded = false;\n\n\n  // if the admin decide to not upload a file\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // Uploading the file on firebase and keeping the url of file,\n  // we store the state of upload to evit bug if the admin submit while the file is loading\n  onUploadFile(file: File) {\n    this.fileIsUploading = true;\n    this.services.uploadFile(file).then(\n      (url: string) => {\n        this.fileUrl = url;\n        this.data.file = url;\n        console.log('url:', url);\n        this.fileIsUploading = false;\n        this.fileUploaded = true ;\n      }\n    );\n  }\n\n  detectFiles(event) {\n    this.onUploadFile(event.target.files[0]);\n  }\n// We send back the file path to the service component\n  UploadValidate() {\n    this.data.file = this.fileUrl;\n    this.dialogRef.close(this.data.file);\n  }\n\n}\n","module.exports = \"<div class=\\\"order-dialog\\\">\\r\\n  <div mat-dialog-content>\\r\\n    <p>Upload File</p>\\r\\n    <input #file type=\\\"file\\\" [hidden]=\\\"true\\\" accept=\\\"image/*\\\" (change)=\\\"detectFiles($event)\\\">\\r\\n    <button mat-button (click)= \\\"file.click()\\\">\\r\\n      <mat-icon color=\\\"accent\\\">file_upload</mat-icon>\\r\\n    </button>\\r\\n    <h4 *ngIf=\\\"fileUploaded\\\">File uploaded</h4>\\r\\n  </div>\\r\\n  <div mat-dialog-actions>\\r\\n    <div class=\\\"center\\\">\\r\\n      <button mat-button (click)=\\\"onNoClick()\\\">Back</button>\\r\\n      <button mat-button (click)=\\\"UploadValidate()\\\" [disabled]=\\\"fileIsUploading\\\" [mat-dialog-close]=\\\"data.file\\\" cdkFocusInitial>Upload</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<!-- We use the reactive form method for the login -->\\n\\n<mat-card>\\n  <h2>Connexion</h2>\\n  <form class=\\\"example-form\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onSubmitForm()\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n    </mat-form-field>\\n\\n    <!-- we disable the button if the form is not valid -->\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"userForm.invalid\\\">Se connecter</button>\\n  </form>\\n</mat-card>\\n\"","module.exports = \"h2 {\\n  text-align: center; }\\n\\nmat-card {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n  margin: 0 auto;\\n  margin-top: 10%;\\n  margin-bottom: 10%; }\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 90%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd29ya2VyLWxvZ2luL0M6XFxVc2Vyc1xcTWF0dGhld1xcRGVza3RvcFxcUHJvamV0X1dFQi9zcmNcXGFwcFxcd29ya2VyLWxvZ2luXFx3b3JrZXItbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0IsRUFBQTs7QUFHcEI7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFdBQVk7RUFDWixjQUFjO0VBQ2QsZUFBZTtFQUNmLGtCQUFrQixFQUFBOztBQUdwQjtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsVUFBVyxFQUFBOztBQUdiO0VBQ0UsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvd29ya2VyLWxvZ2luL3dvcmtlci1sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImgyIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbm1hdC1jYXJkIHtcclxuICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gIG1heC13aWR0aDogNTAwcHg7XHJcbiAgd2lkdGg6IDEwMCUgO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIG1hcmdpbi10b3A6IDEwJTtcclxuICBtYXJnaW4tYm90dG9tOiAxMCU7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZvcm0ge1xyXG4gIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICB3aWR0aDogOTAlIDtcclxufVxyXG5cclxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl19 */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {TokenPayload2, WorkerAuthService} from '../../WorkerAuth.service';\n\n\n@Component({\n  selector: 'app-worker-login',\n  templateUrl: './worker-login.component.html',\n  styleUrls: ['./worker-login.component.scss']\n})\nexport class WorkerLoginComponent implements OnInit {\n\n// We define credentials to ensure to not have a conflict of data type with the workerAuth service\n  credentials: TokenPayload2 = {\n    id: 0,\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    phone: '',\n    image: '',\n  };\n\n  userForm: FormGroup;\n\n\n  constructor(private formBuilder: FormBuilder,\n              private worker: WorkerAuthService,\n              private router: Router) {}\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  // We Init the form with the validators\n  initForm() {\n    this.userForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n// We store the result of the form and we send them to the server. If the infos are correct\n// we redirect the worker and if not we alert him\n  onSubmitForm() {\n\n    const formValue = this.userForm.value;\n    this.credentials.email = formValue.email;\n    this.credentials.password = formValue.password;\n\n    this.worker.login(this.credentials).subscribe((data) => {\n      console.log(data);\n      if (data.error === 'Incorrect Details') {\n        alert(data.error);\n      } else {\n        this.router.navigate(['worker-profile']);\n      }\n    });\n  }\n}\n\n","module.exports = \"<!-- Dialog page displayed when a worker click on an order he picked -->\\r\\n<div class=\\\"order-dialog\\\">\\r\\n\\r\\n  <h1 mat-dialog-title>{{data.firstname}} {{data.lastname}}</h1>\\r\\n  <div mat-dialog-content></div>\\r\\n\\r\\n  <!-- We let the possibility for the worker to let a review before closing the order -->\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput #message maxlength=\\\"42\\\" placeholder=\\\"Laissez un avis\\\" [(ngModel)]=\\\"data.review\\\">\\r\\n    <mat-hint align=\\\"start\\\"><strong>Facultatif</strong> </mat-hint>\\r\\n    <mat-hint align=\\\"end\\\">{{message.value.length}} / 42</mat-hint>\\r\\n  </mat-form-field>\\r\\n\\r\\n\\r\\n  <div mat-dialog-actions>\\r\\n    <div class=\\\"center\\\">\\r\\n      <button mat-button (click)=\\\"onNoClick()\\\" color=\\\"accent\\\">Retour</button>\\r\\n      <button mat-button [mat-dialog-close]=\\\"data.review\\\" color=\\\"primary\\\">Le service a été rendu</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"order-dialog\\\">\\r\\n  <div mat-dialog-content>\\r\\n    <p>Upload File</p>\\r\\n    <input #file type=\\\"file\\\" [hidden]=\\\"true\\\" accept=\\\"image/*\\\" (change)=\\\"detectFiles($event)\\\">\\r\\n    <button mat-button (click)= \\\"file.click()\\\">\\r\\n      <mat-icon color=\\\"accent\\\">file_upload</mat-icon>\\r\\n    </button>\\r\\n    <h4 *ngIf=\\\"fileUploaded\\\">File uploaded ! </h4>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div mat-dialog-actions>\\r\\n    <div class=\\\"center\\\">\\r\\n      <button mat-button (click)=\\\"onNoClick()\\\">Back</button>\\r\\n      <button mat-button (click)=\\\"UploadValidate()\\\" [disabled]=\\\"fileIsUploading\\\" [mat-dialog-close]=\\\"data.file\\\" cdkFocusInitial>Upload</button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<!-- HTML Page for the worker profile -->\\n\\n<div class=\\\"profile-container\\\">\\n  <div class=\\\"profile-menu\\\">\\n    <div class=\\\"image-container\\\">\\n      <img [src]=\\\"details?.image\\\" alt=\\\"\\\">\\n    </div>\\n    <ul>\\n      <li class=\\\"active\\\">Profile</li>\\n    </ul>\\n  </div>\\n  <div class=\\\"profile-content\\\">\\n    <div class=\\\"actions\\\">\\n      <button mat-icon-button (click)=\\\"openDialog2()\\\">\\n        <mat-icon class=\\\"icon\\\">add_a_photo</mat-icon>\\n      </button>\\n      <button mat-icon-button>\\n        <mat-icon class=\\\"icon\\\">create</mat-icon>\\n      </button>\\n    </div>\\n    <div class=\\\"pic\\\">\\n      <img [src]=\\\"details?.image\\\" alt=\\\"\\\">\\n      <h2>{{details?.firstname}} {{details?.lastname}}</h2>\\n      <span>{{details?.email}}</span>\\n    </div>\\n    <div class=\\\"summary\\\">\\n      <div class=\\\"content\\\">\\n        <span>0</span>\\n        <span>Services</span>\\n      </div>\\n      <div class=\\\"content\\\">\\n        <span>{{reviewPosted}}</span>\\n        <span>Review posted</span>\\n      </div>\\n    </div>\\n    <div class=\\\"profile-details\\\">\\n      <table mat-table [dataSource]=\\\"dataSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\" >\\n        <ng-container matColumnDef=\\\"choose\\\">\\n          <th mat-header-cell *matHeaderCellDef></th>\\n          <th mat-cell *matCellDef=\\\"let row\\\">\\n            <mat-icon>keyboard_arrow_down</mat-icon>\\n          </th>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of displayedColumns2\\\" >\\n          <th mat-header-cell *matHeaderCellDef >{{column}}</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\" > {{element[column]}} </td>\\n        </ng-container>\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true;\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let element; columns: displayedColumns;\\\" (click)=\\\"openDialog(element)\\\"></tr>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"/* CSS of the worker profile */\\n.profile-container {\\n  max-width: 485px;\\n  width: 100%;\\n  height: 485px;\\n  margin: 0 auto;\\n  margin-top: 50px; }\\n.profile-container .profile-menu {\\n    float: left;\\n    width: 37%;\\n    height: 482px;\\n    background: #fff;\\n    box-shadow: 0 0 25px rgba(0, 0, 0, 0.2); }\\n.profile-container .profile-menu .image-container {\\n      width: 70px;\\n      height: 70px;\\n      margin: 60px; }\\n.profile-container .profile-menu .image-container img {\\n        max-width: 100%;\\n        height: auto;\\n        border-radius: 50%; }\\n.profile-container .profile-menu .image-container img:hover {\\n          opacity: 0.8; }\\n.profile-container .profile-menu ul {\\n      list-style: none;\\n      margin: 0;\\n      padding: 0; }\\n.profile-container .profile-menu ul li {\\n        padding: 10px 20px;\\n        font-size: 13px; }\\n.profile-container .profile-menu ul li:hover, .profile-container .profile-menu ul li.active {\\n          background: #f7f7f7;\\n          border-left: 5px solid  #053279; }\\n.profile-container .profile-content {\\n    width: 63%;\\n    float: right;\\n    background: #fff;\\n    box-shadow: 0 0 25px rgba(0, 0, 0, 0.2); }\\n.profile-container .profile-content .actions {\\n      width: 100%;\\n      background: linear-gradient(to right, #053279 0%, #5994F1 100%);\\n      height: 40px;\\n      line-height: 40;\\n      color: #fff;\\n      padding: 20px 0 0 0; }\\n.profile-container .profile-content .actions button {\\n        padding-left: 20px;\\n        float: left; }\\n.profile-container .profile-content .actions button:hover {\\n          opacity: 0.8; }\\n.profile-container .profile-content .actions button + button {\\n        padding-right: 40px;\\n        float: right; }\\n.profile-container .profile-content .pic {\\n      background: linear-gradient(to right, #053279 0%, #5994F1 100%);\\n      text-align: center;\\n      color: #fff;\\n      padding: 0 0 20px 0; }\\n.profile-container .profile-content .pic img {\\n        width: 90px;\\n        height: auto;\\n        border-radius: 50%; }\\n.profile-container .profile-content .pic img:hover {\\n          opacity: 0.8; }\\n.profile-container .profile-content .pic h2 {\\n        font-size: 17px;\\n        padding: 0;\\n        margin: 0;\\n        font-weight: 400; }\\n.profile-container .profile-content .pic span {\\n        font-size: 15px;\\n        font-weight: 300; }\\n.profile-container .profile-content .summary {\\n      color: #fff; }\\n.profile-container .profile-content .summary .content {\\n        width: 50%;\\n        float: left;\\n        text-align: center;\\n        display: block;\\n        background: linear-gradient(to right, #053279 0%, #5994F1 100%);\\n        padding: 10px 0; }\\n.profile-container .profile-content .summary .content span {\\n          display: block;\\n          font-size: 15px;\\n          font-weight: 500; }\\n.profile-container .profile-content .profile-details {\\n      padding-top: 20px;\\n      margin-top: 20px;\\n      text-align: center; }\\n.profile-container .profile-content .profile-details .table {\\n        width: 100%;\\n        float: left; }\\ntable {\\n  width: 100%;\\n  height: 200px; }\\n.order-dialog {\\n  text-align: center;\\n  width: 100%;\\n  height: 100%;\\n  margin: 0 auto; }\\n.order-dialog .mat-dialog {\\n    text-align: center;\\n    margin: 0 auto; }\\n.center {\\n  padding-top: 8px;\\n  text-align: center;\\n  margin: 0 auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd29ya2VyLXByb2ZpbGUvQzpcXFVzZXJzXFxNYXR0aGV3XFxEZXNrdG9wXFxQcm9qZXRfV0VCL3NyY1xcYXBwXFx3b3JrZXItcHJvZmlsZVxcd29ya2VyLXByb2ZpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOEJBQUE7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsYUFBYTtFQUNiLGNBQWM7RUFDZCxnQkFBZ0IsRUFBQTtBQUxsQjtJQU9JLFdBQVc7SUFDWCxVQUFVO0lBQ1YsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQix1Q0FBOEIsRUFBQTtBQVhsQztNQWFNLFdBQVc7TUFDWCxZQUFZO01BQ1osWUFBWSxFQUFBO0FBZmxCO1FBaUJRLGVBQWU7UUFDZixZQUFZO1FBQ1osa0JBQWlCLEVBQUE7QUFuQnpCO1VBcUJVLFlBQVksRUFBQTtBQXJCdEI7TUEwQk0sZ0JBQWdCO01BQ2hCLFNBQVM7TUFDVCxVQUFVLEVBQUE7QUE1QmhCO1FBOEJRLGtCQUFrQjtRQUNsQixlQUFlLEVBQUE7QUEvQnZCO1VBaUNVLG1CQUFtQjtVQUNuQiwrQkFBK0IsRUFBQTtBQWxDekM7SUF3Q0ksVUFBVTtJQUNWLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsdUNBQThCLEVBQUE7QUEzQ2xDO01BNkNNLFdBQVc7TUFDWCwrREFBZ0U7TUFDaEUsWUFBWTtNQUNaLGVBQWU7TUFDZixXQUFXO01BQ1gsbUJBQW1CLEVBQUE7QUFsRHpCO1FBb0RRLGtCQUFrQjtRQUNsQixXQUFXLEVBQUE7QUFyRG5CO1VBdURVLFlBQVksRUFBQTtBQXZEdEI7UUEyRFEsbUJBQW1CO1FBQ25CLFlBQVksRUFBQTtBQTVEcEI7TUFnRU0sK0RBQWdFO01BQ2hFLGtCQUFrQjtNQUNsQixXQUFXO01BQ1gsbUJBQW1CLEVBQUE7QUFuRXpCO1FBcUVRLFdBQVc7UUFDWCxZQUFZO1FBQ1osa0JBQWtCLEVBQUE7QUF2RTFCO1VBeUVVLFlBQVksRUFBQTtBQXpFdEI7UUE2RVEsZUFBZTtRQUNmLFVBQVU7UUFDVixTQUFTO1FBQ1QsZ0JBQWdCLEVBQUE7QUFoRnhCO1FBbUZRLGVBQWU7UUFDZixnQkFBZ0IsRUFBQTtBQXBGeEI7TUF3Rk0sV0FBVyxFQUFBO0FBeEZqQjtRQTBGUSxVQUFVO1FBQ1YsV0FBVztRQUNYLGtCQUFrQjtRQUNsQixjQUFjO1FBQ2QsK0RBQWdFO1FBQ2hFLGVBQWUsRUFBQTtBQS9GdkI7VUFpR1UsY0FBYztVQUNkLGVBQWU7VUFDZixnQkFBZ0IsRUFBQTtBQW5HMUI7TUF3R00saUJBQWlCO01BQ2pCLGdCQUFnQjtNQUNoQixrQkFBa0IsRUFBQTtBQTFHeEI7UUE0R1EsV0FBVztRQUNYLFdBQVcsRUFBQTtBQU1uQjtFQUNFLFdBQVc7RUFDWCxhQUFhLEVBQUE7QUFHZjtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGNBQWMsRUFBQTtBQUpoQjtJQU1JLGtCQUFrQjtJQUNsQixjQUFjLEVBQUE7QUFHbEI7RUFDRSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3dvcmtlci1wcm9maWxlL3dvcmtlci1wcm9maWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQ1NTIG9mIHRoZSB3b3JrZXIgcHJvZmlsZSAqL1xyXG5cclxuLnByb2ZpbGUtY29udGFpbmVye1xyXG4gIG1heC13aWR0aDogNDg1cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA0ODVweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gIC5wcm9maWxlLW1lbnV7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAzNyU7XHJcbiAgICBoZWlnaHQ6IDQ4MnB4O1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAyNXB4IHJnYmEoIzAwMCwgMC4yKTtcclxuICAgIC5pbWFnZS1jb250YWluZXJ7XHJcbiAgICAgIHdpZHRoOiA3MHB4O1xyXG4gICAgICBoZWlnaHQ6IDcwcHg7XHJcbiAgICAgIG1hcmdpbjogNjBweDtcclxuICAgICAgaW1ne1xyXG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czo1MCU7XHJcbiAgICAgICAgJjpob3ZlcntcclxuICAgICAgICAgIG9wYWNpdHk6IDAuODtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHVse1xyXG4gICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICBtYXJnaW46IDA7XHJcbiAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgIGxpe1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgICAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICAgICAgJjpob3ZlciwgJi5hY3RpdmV7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjdmN2Y3O1xyXG4gICAgICAgICAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAgIzA1MzI3OTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgLnByb2ZpbGUtY29udGVudHtcclxuICAgIHdpZHRoOiA2MyU7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDI1cHggcmdiYSgjMDAwLCAwLjIpO1xyXG4gICAgLmFjdGlvbnN7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICAjMDUzMjc5IDAlLCAjNTk5NEYxIDEwMCUpO1xyXG4gICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiA0MDtcclxuICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgIHBhZGRpbmc6IDIwcHggMCAwIDA7XHJcbiAgICAgIGJ1dHRvbntcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgJjpob3ZlcntcclxuICAgICAgICAgIG9wYWNpdHk6IDAuODtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgYnV0dG9uK2J1dHRvbntcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xyXG4gICAgICAgIGZsb2F0OiByaWdodDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnBpY3tcclxuICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAgIzA1MzI3OSAwJSwgIzU5OTRGMSAxMDAlKTtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgcGFkZGluZzogMCAwIDIwcHggMDtcclxuICAgICAgaW1ne1xyXG4gICAgICAgIHdpZHRoOiA5MHB4O1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgJjpob3ZlcntcclxuICAgICAgICAgIG9wYWNpdHk6IDAuODtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaDJ7XHJcbiAgICAgICAgZm9udC1zaXplOiAxN3B4O1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgIH1cclxuICAgICAgc3BhbntcclxuICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnN1bW1hcnl7XHJcbiAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAuY29udGVudHtcclxuICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICAjMDUzMjc5IDAlLCAjNTk5NEYxIDEwMCUpO1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHggMDtcclxuICAgICAgICBzcGFue1xyXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnByb2ZpbGUtZGV0YWlsc3tcclxuICAgICAgcGFkZGluZy10b3A6IDIwcHg7XHJcbiAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgLnRhYmxle1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG50YWJsZXtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDIwMHB4O1xyXG59XHJcblxyXG4ub3JkZXItZGlhbG9ne1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgLm1hdC1kaWFsb2d7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICB9XHJcbn1cclxuLmNlbnRlcntcclxuICBwYWRkaW5nLXRvcDogOHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuXHJcbiJdfQ== */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {WorkerDetails, WorkerAuthService} from '../../WorkerAuth.service';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatTableDataSource} from '@angular/material';\nimport {OrderService} from '../../order.service';\nimport {DialogData} from '../services/services.component';\nimport {ServicesService} from '../../services.service';\nimport {AuthentificationService} from '../../authentification.service';\nimport {Router} from '@angular/router';\n\ninterface Order {\n  idOrder: number;\n  idWorker: number;\n  orderDate: string;\n  orderStatus: string;\n  name: string;\n  desc: string;\n  price: number;\n  image: string;\n  firstname: string;\n  lastname: string;\n  idUser: number;\n}\n\nexport interface DialogData2 {\n  firstname: string;\n  lastname: string;\n  desc: string;\n  review: string;\n}\n\n@Component({\n  selector: 'app-worker-profile',\n  templateUrl: './worker-profile.component.html',\n  styleUrls: ['./worker-profile.component.scss']\n})\nexport class WorkerProfileComponent implements OnInit {\n\n// We will store the worker detail in that variable\n  details: WorkerDetails;\n  fileUrl: string;\n\n  constructor(private auth: WorkerAuthService,\n              private order: OrderService,\n              private user: AuthentificationService,\n              public dialog: MatDialog,\n              private router: Router) { }\n\n  reviewPosted = 0;\n  dataSource;\n  Orders: Order[] = [];\n  displayedColumns: string[] = ['choose','idOrder', 'orderDate', 'name'];\n  displayedColumns2: string[] = ['idOrder', 'orderDate', 'name'];\n  // At the start of the script we initialise the profile by getting the info of the worker and also the order he is doing right now\n  ngOnInit() {\n    this.auth.profile().subscribe(\n      user => {\n        this.details = user;\n      },\n      err => {\n        console.error((err));\n      }\n    );\n    this.getAllOrder();\n  }\n\n\n  // We open a dialog page to display the info of the user while the worker his clicking on it\n  openDialog(order): void {\n    const dialogRef = this.dialog.open(OrderInfoDialogComponent, {\n      width: '350px',\n      data: {firstname: order.firstname, lastname: order.lastname, desc: order.desc}\n    });\n\n    // If the worker has done the order we delete it and if he post a review we add the review\n    dialogRef.afterClosed().subscribe(result => {\n      if(result !== 'null'){\n        if (result) {\n          this.auth.profile().subscribe(worker => {\n            const review = {\n              idUser: order.idUser,\n              idWorker: worker.id,\n              content: result\n            };\n            this.auth.addReview(review).subscribe(data => {\n              console.log(data);\n            });\n          })\n        }\n\n        this.order.setFinished(order).subscribe(data => {\n          console.log(data);\n          for (let i = 0; i < this.Orders.length; i++) {\n            if (this.Orders[i].idOrder === order.idOrder) {\n              this.Orders.splice(i, 1);\n              this.dataSource = new MatTableDataSource(this.Orders);\n            }\n          }\n        });\n      }\n\n    });\n\n  }\n\n  // We use that function to get all the orders of the worker\n  getAllOrder() {\n    this.auth.profile().subscribe(\n      worker => {\n        this.order.getWorkerOrders(worker.id).subscribe(data => {\n          this.getInfoOrder(data);\n        });\n      },\n      err => {\n        console.error((err));\n      }\n    );\n  }\n\n// This function will bring complementary infos like the user and the service info\n  getInfoOrder(orders) {\n    for (const order of orders) {\n      this.order.getServiceByOrder(order.idOrder).subscribe(data => {\n        const aOrder = {\n          idOrder: 0,\n          idWorker: 0,\n          orderDate: '',\n          orderStatus: '',\n          name: '',\n          desc: '',\n          price: 0,\n          image: '',\n          firstname: '',\n          lastname: '',\n          idUser: 0\n        };\n\n        aOrder.idOrder = order.idOrder;\n        aOrder.orderStatus = order.orderStatus;\n        aOrder.orderDate = 'il y a ' + (Math.round((new Date().getTime() - new Date(order.orderDate).getTime())/60000)).toString() + ' minutes';\n        aOrder.idWorker = order.idWorker;\n\n        if(data){\n          aOrder.name = data.name;\n          aOrder.desc = data.desc;\n          aOrder.price = data.price;\n        }\n\n\n        this.user.userById(order.idUser).subscribe(user => {\n          aOrder.firstname = user.firstname;\n          aOrder.lastname = user.lastname;\n          aOrder.idUser = user.id;\n          this.Orders.push(aOrder);\n          this.dataSource = new MatTableDataSource(this.Orders);\n          console.log(this.Orders);\n        });\n\n      });\n\n\n    }\n\n  }\n\n  // If the admin click on the upload button if open a dialog page in which he will be able to download an image for the order\n  openDialog2(): void {\n    const dialogRef = this.dialog.open(UploadWorkerProfileComponent, {\n      width: '250px',\n      data: {file: this.fileUrl}\n    });\n\n    // we store the image url which was upload by the admin\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.details.image = result\n        console.log(result)\n        this.auth.modify(this.details.id, result).subscribe()\n      }\n    });\n  }\n\n\n}\n\n\n// We create an other component in which we will display the window which will permit the admin to upload an image for the service\n@Component({\n  selector: 'app-upload-worker-profile',\n  templateUrl: 'upload-worker-profile.html',\n  styleUrls: ['worker-profile.component.scss']\n})\nexport class UploadWorkerProfileComponent {\n\n  constructor(public dialogRef: MatDialogRef<UploadWorkerProfileComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private services: ServicesService) {}\n\n  fileIsUploading = false;\n  fileUrl: string;\n  fileUploaded = false;\n\n\n  // if the admin decide to not upload a file\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // Uploading the file on firebase and keeping the url of file,\n  // we store the state of upload to evit bug if the admin submit while the file is loading\n  onUploadFile(file: File) {\n    this.fileIsUploading = true;\n    this.services.uploadFile(file).then(\n      (url: string) => {\n        this.fileUrl = url;\n        this.data.file = url;\n        this.fileIsUploading = false;\n        this.fileUploaded = true ;\n      }\n    );\n  }\n\n  detectFiles(event) {\n    this.onUploadFile(event.target.files[0]);\n  }\n// We send back the file path to the service component\n  UploadValidate() {\n    this.data.file = this.fileUrl;\n    this.dialogRef.close(this.data.file);\n  }\n\n}\n\n\n// We definie the dialog component that we will open in a window\n@Component({\n  selector: 'app-oder-info',\n  templateUrl: 'order-info.html',\n  styleUrls: ['worker-profile.component.scss']\n})\nexport class OrderInfoDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<OrderInfoDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData2) {}\n\n  onNoClick(): void {\n    this.dialogRef.close('null');\n  }\n}\n","module.exports = \"<!-- We use the form reactive method -->\\n<mat-card>\\n  <h2>Création d'un compte</h2>\\n  <form class=\\\"example-form\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onSubmitForm()\\\"><!-- Submitting will start this method -->\\n    <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr>\\n      <td><mat-form-field class=\\\"example-full-width\\\"> <!-- We define all of our inputs -->\\n        <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstname\\\">\\n      </mat-form-field></td>\\n      <td><mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastname\\\">\\n      </mat-form-field></td>\\n    </tr></table>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"cpassword\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <span matPrefix>+33 &nbsp;</span>\\n      <input type=\\\"tel\\\" matInput placeholder=\\\"Telephone\\\" formControlName=\\\"phone\\\">\\n      <mat-icon matSuffix>mode_edit</mat-icon>\\n    </mat-form-field>\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"userForm.invalid\\\">Submit</button>\\n  </form><!-- the submit is impossible while the form is invalid, while the validators are not passed -->\\n</mat-card>\\n\\n\"","module.exports = \"/*CSS for worker register */\\nh2 {\\n  text-align: center; }\\nmat-card {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n  margin: 0 auto;\\n  margin-top: 10%;\\n  margin-bottom: 10%; }\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 90%; }\\n.example-full-width {\\n  width: 100%; }\\ntd {\\n  padding-right: 8px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd29ya2VyLXJlZ2lzdGVyL0M6XFxVc2Vyc1xcTWF0dGhld1xcRGVza3RvcFxcUHJvamV0X1dFQi9zcmNcXGFwcFxcd29ya2VyLXJlZ2lzdGVyXFx3b3JrZXItcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkJBQUE7QUFDQTtFQUNFLGtCQUFrQixFQUFBO0FBR3BCO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixXQUFZO0VBQ1osY0FBYztFQUNkLGVBQWU7RUFDZixrQkFBa0IsRUFBQTtBQUdwQjtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsVUFBVyxFQUFBO0FBR2I7RUFDRSxXQUFXLEVBQUE7QUFHYjtFQUNFLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvd29ya2VyLXJlZ2lzdGVyL3dvcmtlci1yZWdpc3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qQ1NTIGZvciB3b3JrZXIgcmVnaXN0ZXIgKi9cclxuaDIge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxubWF0LWNhcmQge1xyXG4gIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICB3aWR0aDogMTAwJSA7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgbWFyZ2luLXRvcDogMTAlO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwJTtcclxufVxyXG5cclxuLmV4YW1wbGUtZm9ybSB7XHJcbiAgbWluLXdpZHRoOiAxNTBweDtcclxuICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gIHdpZHRoOiA5MCUgO1xyXG59XHJcblxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxudGR7XHJcbiAgcGFkZGluZy1yaWdodDogOHB4O1xyXG59XHJcbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {Validators, FormGroup, FormBuilder} from '@angular/forms';\n\nimport {Router} from '@angular/router';\nimport {TokenPayload2, WorkerAuthService} from '../../WorkerAuth.service';\n\n\n@Component({\n  selector: 'app-worker-register',\n  templateUrl: './worker-register.component.html',\n  styleUrls: ['./worker-register.component.scss']\n})\nexport class WorkerRegisterComponent implements OnInit {\n\n  userForm: FormGroup;\n\n  // We define credentials to ensure to not have a conflict of data type with the authentification service\n  credentials: TokenPayload2 = {\n    id: 0,\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    phone: '',\n    image: ''\n  };\n\n\n  constructor(private formBuilder: FormBuilder,\n              private worker: WorkerAuthService,\n              private router: Router) {}\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  // We Init the form with the validators\n  initForm() {\n    this.userForm = this.formBuilder.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      cpassword: ['', Validators.required],\n      phone: ['', Validators.required]\n    });\n  }\n\n  // We store the results of the form and we send them to the server. If the email is not already taken\n  // we redirect the worker and if not we alert the user\n  onSubmitForm() {\n    const formValue = this.userForm.value;\n\n    if (formValue.password != formValue.cpassword) {\n      alert('Passwords do not match');\n      return;\n    }\n\n    this.credentials.firstname = formValue.firstname;\n    this.credentials.lastname = formValue.lastname;\n    this.credentials.email = formValue.email;\n    this.credentials.password = formValue.password;\n    this.credentials.phone = formValue.phone;\n\n    this.worker.register(this.credentials).subscribe(\n      (data) => {\n        console.log(data)\n        if(data.error == 'User already exists'){\n          alert('User already exist')\n        }else{\n          this.router.navigate(['worker-profile']);\n        }\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n}\n","import { Injectable} from '@angular/core';\r\nimport {Router, CanActivate} from '@angular/router';\r\nimport {AuthentificationService} from './authentification.service';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private auth: AuthentificationService, private router: Router) {}\r\n\r\n  canActivate () {\r\n    if(!this.auth.isLoggedIn()){\r\n      this.router.navigateByUrl('/')\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport {Token} from '@angular/compiler';\r\nimport {WorkerDetails} from './WorkerAuth.service';\r\nimport {error} from '@angular/compiler/src/util';\r\n\r\nexport interface UserDetails {\r\n  id: number\r\n  firstname: string\r\n  lastname: string\r\n  email: string\r\n  password: string\r\n  phone: string\r\n  city: string\r\n  address: string\r\n  code: string\r\n  isAdmin: string\r\n  image: string\r\n  exp: number\r\n  iat: number\r\n}\r\n\r\ninterface TokenResponse{\r\n  token: string;\r\n}\r\n\r\n\r\nexport interface TokenPayload{\r\n  id: number\r\n  firstname: string\r\n  lastname: string\r\n  email: string\r\n  password: string\r\n  phone: string\r\n  city: string\r\n  address: string\r\n  code: string\r\n}\r\n\r\n@Injectable()\r\nexport class AuthentificationService {\r\n  private token: string\r\n\r\n  constructor(private http: HttpClient, private router: Router){}\r\n\r\n  private saveToken(token: string): void {\r\n    localStorage.setItem('userToken', token)\r\n    this.token = token\r\n  }\r\n\r\n  private getToken(): string {\r\n    if(!this.token){\r\n      this.token = localStorage.getItem('userToken')\r\n    }\r\n    return this.token\r\n  }\r\n\r\n  public getUserDetails(): UserDetails {\r\n    const token = this.getToken()\r\n    let payload\r\n    if(token){\r\n      payload = token.split('.')[1]\r\n      payload = window.atob(payload)\r\n      return JSON.parse(payload)\r\n    }else{\r\n      return null\r\n    }\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = this.getUserDetails()\r\n    if(user) {\r\n      return user.exp > Date.now() / 1000\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  public isAdmin(): boolean {\r\n    const user = this.getUserDetails()\r\n\r\n    if(user) {\r\n      if(user.isAdmin === 'true'){\r\n        return true\r\n      }\r\n      else{\r\n        return false\r\n      }\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  public register(user: TokenPayload) : Observable<any> {\r\n    const base = this.http.post('/api/register',user)\r\n\r\n    const request = base.pipe(\r\n      map((data: TokenResponse) => {\r\n        if(data.token) {\r\n          this.saveToken(data.token)\r\n        }\r\n        return data\r\n      })\r\n    )\r\n    return request\r\n  }\r\n\r\n  public login(user: TokenPayload) : Observable<any> {\r\n    const base = this.http.post('/api/login',user)\r\n\r\n    const request = base.pipe(\r\n      map((data: TokenResponse) => {\r\n        if(data.token) {\r\n          this.saveToken(data.token)\r\n        }\r\n        return data\r\n      })\r\n    )\r\n    return request\r\n  }\r\n\r\n  public profile(): Observable<any> {\r\n    return this.http.get('/api/profile', {\r\n      headers: { Authorization: `${this.getToken()}` }\r\n    })\r\n  }\r\n\r\n  public logout(): void {\r\n    this.token = ''\r\n    window.localStorage.removeItem('userToken')\r\n    this.router.navigateByUrl('/')\r\n  }\r\n\r\n  public userById(id): Observable<any> {\r\n    return this.http.get('/api/userById/'+id)\r\n  }\r\n\r\n  public getReview(idUser): Observable<any> {\r\n    return this.http.get('/api/user-reviews/' + idUser)\r\n  }\r\n\r\n  public getReviewCount(idUser): Observable<any> {\r\n    return this.http.get('/api/user-reviews-count/' + idUser)\r\n  }\r\n\r\n  public modify(id, image): Observable<any> {\r\n    return this.http.put('/api/modify/' + id, {img: image})\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\ninterface OrderDetails {\r\n  name: string;\r\n  idUser: number;\r\n\r\n}\r\n\r\n@Injectable()\r\nexport class OrderService {\r\n\r\n  order: OrderDetails = {\r\n    name: '',\r\n    idUser: 0\r\n  }\r\n\r\n  constructor(private http: HttpClient, private router: Router){}\r\n\r\n  OrderOne(name, idUser): Observable<any>{\r\n    this.order.name = name\r\n    this.order.idUser = idUser\r\n    return this.http.post('/api/orderOne', this.order);\r\n  }\r\n\r\n  public orderDelete(id) : Observable<any>{\r\n    return this.http.delete('/api/orderDelete/'+id);\r\n  }\r\n\r\n  public getAllPendingOrders(idUser): Observable<any>{\r\n    return this.http.get('/api/OrderPending/'+idUser)\r\n  }\r\n\r\n  public getPendingOrders(): Observable<any>{\r\n    return this.http.get('/api/OrderAllPending')\r\n  }\r\n\r\n  public PickAnOrder(order,id): Observable<any>{\r\n    return this.http.put('/api/PickAnOrder/'+id,order)\r\n  }\r\n\r\n  public getServiceByOrder(idOrder): Observable<any>{\r\n    return this.http.get('/api/getServiceByOrder/'+idOrder)\r\n  }\r\n\r\n  public getWorkerOrders(idWorker): Observable<any>{\r\n    return this.http.get('/api/getWorkerOrders/'+idWorker)\r\n  }\r\n\r\n  public getOrderCount(idWorker): Observable<any>{\r\n    return this.http.get('/api/orderCount/'+idWorker)\r\n  }\r\n\r\n  public setFinished(order): Observable<any> {\r\n    return this.http.put('/api/setFinished', order)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport * as firebase from 'firebase';\r\n\r\nexport interface ServiceDetails {\r\n  name: string;\r\n  type: string;\r\n  desc: string;\r\n  price: number;\r\n  image: string;\r\n}\r\n\r\nexport interface IdType {\r\n  idType: string;\r\n}\r\n\r\n\r\n\r\n@Injectable()\r\nexport class ServicesService {\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    var firebaseConfig = {\r\n      apiKey: \"AIzaSyAXY8b8nzGuZyipX-WtoUa_qemKIZnkSfk\",\r\n      authDomain: \"myservices-123.firebaseapp.com\",\r\n      databaseURL: \"https://myservices-123.firebaseio.com\",\r\n      projectId: \"myservices-123\",\r\n      storageBucket: \"myservices-123.appspot.com\",\r\n      messagingSenderId: \"777087620663\",\r\n      appId: \"1:777087620663:web:8234ff1ad806bcb6\"\r\n    };\r\n    // Initialize Firebase\r\n    firebase.initializeApp(firebaseConfig);\r\n  }\r\n\r\n  public addService2(service: ServiceDetails): Promise<any> {\r\n    return new Promise((resolve) => {\r\n      console.log(service);\r\n      this.http.post('/api/addService', service).subscribe(() => {\r\n        console.log('service added');\r\n        resolve()\r\n      });\r\n    })\r\n  }\r\n\r\n  public modifyService(image, service: ServiceDetails,id): Promise<any> {\r\n    if(image !== 'assets/images/service.jpg'){\r\n      const storageRef = firebase.storage().refFromURL(image)\r\n      storageRef.delete().then(\r\n        () => {\r\n          console.log('Last image removed')\r\n        },\r\n        (error) => {\r\n          console.log('Could not remove photo! : ' + error)\r\n        }\r\n      )\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      console.log(service);\r\n      this.http.put('/api/modifyService/'+id, service).subscribe(() => {\r\n        console.log('service modified');\r\n        resolve()\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n  public getTypes(): Observable<any> {\r\n    return this.http.get('/api/typeServices');\r\n  }\r\n\r\n  public getServices(): Observable<any> {\r\n    return this.http.get('/api/getServices');\r\n  }\r\n\r\n  public getAservice(id): Observable<any> {\r\n    return this.http.get('/api/getService/'+id);\r\n  }\r\n\r\n  public LibelleOfServices(idType): Observable<any>{\r\n    return this.http.get('/api/LibelleOfServices/'+idType)\r\n  }\r\n\r\n  uploadFile(file: File) {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const UniqueFileName = Date.now().toString();\r\n        const upload = firebase.storage().ref()\r\n          .child('images/' + UniqueFileName + file.name)\r\n          .put(file);\r\n        upload.on(firebase.storage.TaskEvent.STATE_CHANGED, () => {\r\n            console.log('Uploading ...');\r\n          },\r\n          (error) => {\r\n            console.log('Error while uploading the file : ' + error);\r\n            reject();\r\n          },\r\n          () => {\r\n            resolve(upload.snapshot.ref.getDownloadURL());\r\n          })\r\n      }\r\n    )\r\n  }\r\n\r\n  public delete(name, image): Observable<any> {\r\n    if(image !== 'assets/images/service.jpg'){\r\n      const storageRef = firebase.storage().refFromURL(image)\r\n      storageRef.delete().then(\r\n        () => {\r\n          console.log('Image removed')\r\n        },\r\n        (error) => {\r\n          console.log('Could not remove photo! : ' + error)\r\n        }\r\n      )\r\n    }\r\n    return this.http.delete('/api/deleteServices/'+name)\r\n  }\r\n}\r\n"],"sourceRoot":""}